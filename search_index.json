[["index.html", "Supplemental info about phylodiversity in evolutionary computation Chapter 1 Introduction 1.1 About our supplemental material 1.2 Contributing authors 1.3 Research overview", " Supplemental info about phylodiversity in evolutionary computation Jose Guadalupe Hernandez, Alexander Lalejini, Emily Dolson 2021-09-07 Chapter 1 Introduction This is the supplemental material for our work, ‘What can phylogenetic metrics tell us about useful diversity in evolutionary algorithms?’. This is not intended as a stand-alone document, but as a companion to our paper. 1.1 About our supplemental material As you may have noticed (unless you’re reading a pdf version of this), our supplemental material is hosted using GitHub pages. We compiled our data analyses and supplemental documentation into this nifty web-accessible book using bookdown. The source code/configuration files for this supplemental material and all experiments in the paper can be found in this GitHub repository. Our supplemental material includes the following: TODO 1.2 Contributing authors Jose Guadalupe Hernandez Alexander Lalejini Emily Dolson 1.3 Research overview 1.3.1 Abstract It is generally accepted that “diversity” is associated with success in evolutionary algorithms. However, diversity is a broad concept that can be measured and defined in a multitude of ways. To date, most evolutionary computation research has measured diversity using the richness and/or evenness of a particular genotypic or phenotypic property. While these metrics are informative, we hypothesize that other diversity metrics are more strongly predictive of success. Phylogenetic diversity metrics are a class of metrics popularly used in biology, which take into account the evolutionary history of a population. Here, we investigate the extent to which 1) these metrics provide different information than those traditionally used in evolutionary computation, and 2) these metrics better predict the long-term success of a run of evolutionary computation. We find that, in most cases, phylogenetic metrics behave meaningfully differently from other diversity metrics. Moreover, our results suggest that phylogenetic diversity is indeed a better predictor of success. "],["exploration-diagnostic.html", "Chapter 2 Exploration Diagnostic 2.1 Setup 2.2 Performance 2.3 Phylogenetic diversity 2.4 Phenotypic diversity 2.5 Relationship between phenotypic and phylogenetic diversity 2.6 Relationship between diversity and success 2.7 Causality analysis", " Chapter 2 Exploration Diagnostic 2.1 Setup First, we need to do some set up to analyze our data Include dependencies library(ggplot2) # For plotting library(tidyverse) # For data wrangling library(knitr) # For making nice rmarkdown documents library(cowplot) # For theme library(viridis) # For color scale library(RColorBrewer) # For more color scales library(rstatix) library(ggsignif) # For adding pairwise significance to plots library(Hmisc) # For bootstrapping condifence internvals library(kableExtra) # For displaying nice tables source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) # For raincloud plots library(readr) # For reading in data library(stringr) # For manipulating string data library(ggpubr) # For displaying correlation statistics on plots library(infotheo) # For causality analysis library(scales) # For displaying scales nicely in facetted plots library(osfr) # For downloading the data for this project These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-apple-darwin17.0 ## arch x86_64 ## os darwin17.0 ## system x86_64, darwin17.0 ## status ## major 4 ## minor 1.1 ## year 2021 ## month 08 ## day 10 ## svn rev 80725 ## language R ## version.string R version 4.1.1 (2021-08-10) ## nickname Kick Things Setup constants to be used across plots # Labeler for stats annotations p_label &lt;- function(p_value) { threshold = 0.0001 if (p_value &lt; threshold) { return(paste0(&quot;p &lt; &quot;, threshold)) } else { return(paste0(&quot;p = &quot;, p_value)) } } # Significance threshold alpha &lt;- 0.05 # Common graph variables performance_ylim &lt;- 1 coverage_ylim &lt;- 1.0 ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) The data for this project are hosted on osf.io. The following chunk downloads them automatically if they haven’t already been downloaded. # Read in data osf_retrieve_file(&quot;esm4r&quot;) %&gt;% osf_download(conflicts = &quot;skip&quot;) # Download data from osf data_loc &lt;- &quot;final_exploration_diagnostic_data.csv&quot; data &lt;- read_csv(data_loc, na=c(&quot;NONE&quot;, &quot;NA&quot;, &quot;&quot;)) ## Clean up data columns # Make selection name column human readable data &lt;- data %&gt;% mutate(selection_name = as.factor(case_when( selection_name == &quot;EpsilonLexicase&quot; ~ &quot;Lexicase&quot;, TOUR_SIZE == 1 ~ &quot;Random&quot;, selection_name == &quot;Tournament&quot; ~ &quot;Tournament&quot;, selection_name == &quot;FitnessSharing&quot; ~ &quot;Fitness Sharing&quot;, selection_name == &quot;EcoEa&quot; ~ &quot;EcoEA&quot; ))) # Calculate performance statistics. # Elite trait avg is the avg per-site performance of the best individual data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT # Convert elite_trait_avg to percent of maximum possible data$elite_trait_avg &lt;- data$elite_trait_avg/data$TARGET # Grab data from just the final time point final_data &lt;- filter(data, evaluations==max(data$evaluations)) 2.2 Performance For context, it’s important to know how each selection scheme performed on the exploration diagnostic. 2.2.1 Over time First we look at the dynamics of performance over time. 2.2.1.1 Trait performance Here, we plot average trait performance (i.e. fitness) over time for each selection scheme. We log the x-axis because Eco-EA gains fitness over a very long time scale, whereas the interesting dynamics for the other selection schemes occur relatively quickly. ggplot( data, aes( x=gen, # Generations y=elite_trait_avg, # Performance color=selection_name, # Selection scheme fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + # Plot line showing mean for each selection scheme stat_summary( # Add shading around each line indicating 95% confiedence interval geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, # Set y axis title limits=c(0, performance_ylim) # Set y axis range to include all possible performance values ) + scale_x_log10( # Log x axis name=&quot;Generation&quot; # Set x axis title ) + scale_color_discrete(&quot;Selection&quot;) + # Set legend title scale_fill_discrete(&quot;Selection&quot;) # Set legend title As observed by Hernandez et al. in their original paper on the exploration diagnostic (Hernandez, Lalejini, and Ofria 2021), fitness in tournament selection initially increases quickly and then plateaus. Fitness in lexicase selection increases slightly slower but plateaus at a much higher value (nearly 100%). Fitness sharing behaves similarly to tournament selection, but maintains a slight upward trajectory (note that, because the x axis is on a log scale, this trajectory is very gradual). Eco-EA takes substantially longer to increase in fitness but ultimately surpasses fitness sharing and tournament selection. It is unclear whether it would pass lexicase selection if these runs were allowed to continue for slightly longer; they do not appear to have plateaued yet. We chose to cut them off at 500,000 generations due to resource constraints and the fact that the questions we’re asking here are not really about final fitness. 2.2.1.2 Activation position coverage Out of curiosity, we also ran the analysis of unique activation positions present in the population, used by Hernandez et. al. This analysis tells us about the diversity of start positions for the coding region represented in the population. As the set of start positions in the population tends to represent a meaningful constraint on the number of paths through the fitness landscape that are currently accessible, this is in some sense a metric of useful diversity in the population ggplot(data, aes(x=gen, y=unique_start_positions_coverage, color=selection_name, fill=selection_name)) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Activation position coverage&quot; ) + scale_x_log10( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;)+ scale_fill_discrete(&quot;Selection&quot;) We see that lexicase selection maintains by far that largest number of unique start positions, even surpassing the number maintained by random drift. This suggests that lexicase selection is actively selecting for maintaining a diversity of start positions. Tournament selection and fitness sharing perform virtually identically, with Eco-EA falling in between. 2.2.2 Final While trends over time are more informative, it can be hard to visualize the full distribution (particularly the extent of variation). Thus, we also conduct a more detailed analysis of performance at the final time point. 2.2.2.1 Trait performance First we conduct statistics to identify which selection schemes are significantly different from each other. # Compute manual labels for geom_signif stat.test &lt;- final_data %&gt;% wilcox_test(elite_trait_avg ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% # Apply Bonferroni correction for multiple comparisons add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) Then we make raincloud plots (Allen et al. 2021) of each selection scheme. elite_final_performance_fig &lt;- ggplot( final_data, aes( x=selection_name, y=elite_trait_avg, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, performance_ylim) ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position=&quot;none&quot;) elite_final_performance_fig These observations look fairly consistent with the timeseries plots. Next, we output the results of our significance testing. stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label elite_trait_avg EcoEA Fitness Sharing 50 50 1561 3.20e-02 3.20e-01 ns 1.922000 EcoEA , Fitness Sharing 1 2 p = 0.32 elite_trait_avg EcoEA Lexicase 50 47 60 0.00e+00 0.00e+00 **** 2.946444 EcoEA , Lexicase 1 3 p &lt; 1e-04 elite_trait_avg EcoEA Random 50 50 2500 0.00e+00 0.00e+00 **** 3.970889 EcoEA , Random 1 4 p &lt; 1e-04 elite_trait_avg EcoEA Tournament 50 50 1939 2.10e-06 2.07e-05 **** 4.995333 EcoEA , Tournament 1 5 p &lt; 1e-04 elite_trait_avg Fitness Sharing Lexicase 50 47 593 2.69e-05 2.69e-04 *** 6.019778 Fitness Sharing, Lexicase 2 3 p = 0.000269 elite_trait_avg Fitness Sharing Random 50 50 2500 0.00e+00 0.00e+00 **** 7.044222 Fitness Sharing, Random 2 4 p &lt; 1e-04 elite_trait_avg Fitness Sharing Tournament 50 50 1549 4.00e-02 4.00e-01 ns 8.068667 Fitness Sharing, Tournament 2 5 p = 0.4 elite_trait_avg Lexicase Random 47 50 2350 0.00e+00 0.00e+00 **** 9.093111 Lexicase, Random 3 4 p &lt; 1e-04 elite_trait_avg Lexicase Tournament 47 50 2098 0.00e+00 0.00e+00 **** 10.117556 Lexicase , Tournament 3 5 p &lt; 1e-04 elite_trait_avg Random Tournament 50 50 10 0.00e+00 0.00e+00 **** 11.142000 Random , Tournament 4 5 p &lt; 1e-04 Fitness sharing did not perform significantly differently from Eco-EA or Tournament selection, but all other selection schemes are significantly different. 2.2.2.2 Final activation position Coverage Now we do the same analysis for final activation position coverage. First we calculate the statistics # Compute manual labels for geom_signif stat.test &lt;- final_data %&gt;% wilcox_test(unique_start_positions_coverage ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$manual_position &lt;- stat.test$y.position * 1.05 stat.test$label &lt;- mapply(p_label,stat.test$p.adj) Then we make raincloud plots unique_start_positions_coverage_final_fig &lt;- ggplot( final_data, aes( x=selection_name, y=unique_start_positions_coverage, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0, coverage_ylim) ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme( legend.position=&quot;none&quot; ) unique_start_positions_coverage_final_fig These also look unsurprising. Lastly, we output the results of significance testing. stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax manual_position label unique_start_positions_coverage EcoEA Fitness Sharing 50 50 2392.5 0.000 0 **** 1.420000 EcoEA , Fitness Sharing 1 2 1.491000 p &lt; 1e-04 unique_start_positions_coverage EcoEA Lexicase 50 47 0.0 0.000 0 **** 2.175556 EcoEA , Lexicase 1 3 2.284333 p &lt; 1e-04 unique_start_positions_coverage EcoEA Random 50 50 339.0 0.000 0 **** 2.931111 EcoEA , Random 1 4 3.077667 p &lt; 1e-04 unique_start_positions_coverage EcoEA Tournament 50 50 2387.0 0.000 0 **** 3.686667 EcoEA , Tournament 1 5 3.871000 p &lt; 1e-04 unique_start_positions_coverage Fitness Sharing Lexicase 50 47 0.0 0.000 0 **** 4.442222 Fitness Sharing, Lexicase 2 3 4.664333 p &lt; 1e-04 unique_start_positions_coverage Fitness Sharing Random 50 50 25.0 0.000 0 **** 5.197778 Fitness Sharing, Random 2 4 5.457667 p &lt; 1e-04 unique_start_positions_coverage Fitness Sharing Tournament 50 50 1274.5 0.708 1 ns 5.953333 Fitness Sharing, Tournament 2 5 6.251000 p = 1 unique_start_positions_coverage Lexicase Random 47 50 2350.0 0.000 0 **** 6.708889 Lexicase, Random 3 4 7.044333 p &lt; 1e-04 unique_start_positions_coverage Lexicase Tournament 47 50 2350.0 0.000 0 **** 7.464444 Lexicase , Tournament 3 5 7.837667 p &lt; 1e-04 unique_start_positions_coverage Random Tournament 50 50 2475.5 0.000 0 **** 8.220000 Random , Tournament 4 5 8.631000 p &lt; 1e-04 2.3 Phylogenetic diversity Next, we analyze the behavior of phylogenetic diversity on the exploration diagnostic. 2.3.1 Relationship between different types of pylogenetic diversity First, to get a big-picture overview, we make correlation matrices of all the different phylogenetic diversity metrics: final_data %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() Since these could vary by selection scheme, we also make a correlation matrix for each selection scheme, below. In general, it looks like the pairwise distance metrics behave similarly to each other and the evolutionary distinctiveness metrics behave similarly to each other. Let’s spot check that by looking at some scatter plots (we’re excluding min pairwise distance, because it’s pretty much always 1). ggplot( data %&gt;% filter(gen==500000), aes( y=mean_phenotype_pairwise_distance, x=variance_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(gen==500000), aes( y=mean_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(gen==500000), aes( y=variance_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) And let’s check that it doesn’t look radically different early on in the run: ggplot( data %&gt;% filter(gen==5000), aes( y=mean_phenotype_pairwise_distance, x=variance_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(gen==5000), aes( y=mean_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(gen==5000), aes( y=variance_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Similarly, the evolutionary distinctiveness metrics look largely similar to each other, but let’s spot check that too. ggplot( data %&gt;% filter(gen==500000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=variance_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(gen==500000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=max_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(gen==500000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=min_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) And let’s check out an earlier time point ggplot( data %&gt;% filter(gen==5000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=variance_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(gen==5000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=max_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(gen==5000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=min_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Looks like the evolutionary distinctiveness statistics capture more different information from each other than the pairwise distance statistics. However, in a lot of cases they still correlate. There is definitely more exploration to be done on what differences in these metrics imply, but for simplicity we’ll stick to one pairwise distance metric and one evolutionary distinctiveness metric. 2.3.1.1 Random final_data %&gt;% filter(selection_name==&quot;Random&quot;) %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() 2.3.1.2 Tournament final_data %&gt;% filter(selection_name==&quot;Tournament&quot;) %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() 2.3.1.3 Fitness Sharing final_data %&gt;% filter(selection_name==&quot;Fitness Sharing&quot;) %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() 2.3.1.4 Lexicase selection final_data %&gt;% filter(selection_name==&quot;Lexicase&quot;) %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() 2.3.1.5 Eco-EA final_data %&gt;% filter(selection_name==&quot;EcoEA&quot;) %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() 2.3.2 Over time 2.3.2.1 Mean pairwise distance First we plot mean pairwise distance over time. We log the y axis because there is such variation in mean pairwise distance across selection schemes, and the x-axis for the same reason as before. ggplot( data, aes( x=gen, y=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_log10( name=&quot;Mean pairwise distance&quot; ) + scale_x_log10( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) Lexicase selection maintains a monotonic increase in phylogenetic diversity over the course of the entire experiment. It likely never experiences a full coalescence event (where the most-recent common ancestor changes). Eco-EA nearly keeps pace with lexicase selection until towards the end, when its phylogenetic diversity crashes. This is likely the result of selective sweeps that begin to occur as the population discovers high fitness solutions. Fitness sharing shows a slight dip at the same time that its fitness plateaus (likely also the result of a selective sweep), but phylogenetic diversity recovers afterwards, making for a relatively constant level. over time. Tournament selection, on the other hand, maintains the same (low) level of phylogenetic diversity as fitness sharing, up until the point that fitness plateaus, at which point tournament selection’s phylodiversity drops to nearly 0. Interestingly, lexicase selection and Eco-EA both maintain more phylodiversity than random selection, whereas fitness sharing and tournament selection maintain less. 2.3.2.2 Mean evolutionary distinctiveness For comparison, we make the same plot with mean evolutionary distinctiveness. ggplot( data, aes( x=gen, y=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_log10( name=&quot;Mean evolutionary distinctiveness&quot; ) + scale_x_log10( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) Interestingly, Fitness Sharing and tournament selection both start increasing in evolutionary distinctiveness only after their fitnesses have plateaued. This seems likely to be due to some sort of pathological behavior of mean evolutionary distinctiveness on small trees, but more investigation would be necessary to figure out exactly what’s going on. Trends in other selection schemes are largely similar. 2.3.3 Final Next, we perform a more in-depth analysis of phylodiversity distributions at the final time point. 2.3.3.1 Mean pairwise distance First, we test which selection schemes end up with significantly different final distributions of mean pairwise distance. # Pairwise wilcoxon teset to determine which conditions are significantly different from each other stat.test &lt;- final_data %&gt;% wilcox_test(mean_phenotype_pairwise_distance ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) # Output stats stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label mean_phenotype_pairwise_distance EcoEA Fitness Sharing 50 50 1824.0 7.70e-05 7.70e-04 *** 49488.81 EcoEA , Fitness Sharing 1 2 p = 0.00077 mean_phenotype_pairwise_distance EcoEA Lexicase 50 47 227.0 0.00e+00 0.00e+00 **** 76981.49 EcoEA , Lexicase 1 3 p &lt; 1e-04 mean_phenotype_pairwise_distance EcoEA Random 50 50 690.0 1.15e-04 1.15e-03 ** 104474.18 EcoEA , Random 1 4 p = 0.00115 mean_phenotype_pairwise_distance EcoEA Tournament 50 50 2500.0 0.00e+00 0.00e+00 **** 131966.86 EcoEA , Tournament 1 5 p &lt; 1e-04 mean_phenotype_pairwise_distance Fitness Sharing Lexicase 50 47 0.0 0.00e+00 0.00e+00 **** 159459.54 Fitness Sharing, Lexicase 2 3 p &lt; 1e-04 mean_phenotype_pairwise_distance Fitness Sharing Random 50 50 536.0 9.00e-07 8.70e-06 **** 186952.22 Fitness Sharing, Random 2 4 p &lt; 1e-04 mean_phenotype_pairwise_distance Fitness Sharing Tournament 50 50 2232.5 0.00e+00 0.00e+00 **** 214444.90 Fitness Sharing, Tournament 2 5 p &lt; 1e-04 mean_phenotype_pairwise_distance Lexicase Random 47 50 2350.0 0.00e+00 0.00e+00 **** 241937.58 Lexicase, Random 3 4 p &lt; 1e-04 mean_phenotype_pairwise_distance Lexicase Tournament 47 50 2350.0 0.00e+00 0.00e+00 **** 269430.26 Lexicase , Tournament 3 5 p &lt; 1e-04 mean_phenotype_pairwise_distance Random Tournament 50 50 2500.0 0.00e+00 0.00e+00 **** 296922.94 Random , Tournament 4 5 p &lt; 1e-04 Looks like they are all significantly different from each other. # Raincloud plot of final mean pairwise distance final_phylogeny_fig &lt;- ggplot( final_data, aes( x=selection_name, y=mean_phenotype_pairwise_distance, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_log10( name=&quot;Mean pairwise distance&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) final_phylogeny_fig This shows something interesting! Final phylogenetic diversity in Eco-EA is heavily bimodal. In later analysis, we will see that the runs with high phylogenetic diversity are the ones with lower fitness, suggesting that they have no yet experienced a selective sweep resulting from the discovery of a high-fitness solution. 2.3.3.2 Mean evolutionary distinctiveness Tests for significant differences: # Pairwise wilcoxon teset to determine which conditions are significantly different from each other stat.test &lt;- final_data %&gt;% wilcox_test(mean_phenotype_evolutionary_distinctiveness ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) # Output stats stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label mean_phenotype_evolutionary_distinctiveness EcoEA Fitness Sharing 50 50 469 1.00e-07 7.00e-07 **** 289111.7 EcoEA , Fitness Sharing 1 2 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness EcoEA Lexicase 50 47 0 0.00e+00 0.00e+00 **** 449625.8 EcoEA , Lexicase 1 3 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness EcoEA Random 50 50 711 2.05e-04 2.05e-03 ** 610140.0 EcoEA , Random 1 4 p = 0.00205 mean_phenotype_evolutionary_distinctiveness EcoEA Tournament 50 50 569 2.70e-06 2.72e-05 **** 770654.1 EcoEA , Tournament 1 5 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness Fitness Sharing Lexicase 50 47 100 0.00e+00 0.00e+00 **** 931168.2 Fitness Sharing, Lexicase 2 3 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness Fitness Sharing Random 50 50 2428 0.00e+00 0.00e+00 **** 1091682.4 Fitness Sharing, Random 2 4 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness Fitness Sharing Tournament 50 50 1614 1.20e-02 1.20e-01 ns 1252196.5 Fitness Sharing, Tournament 2 5 p = 0.12 mean_phenotype_evolutionary_distinctiveness Lexicase Random 47 50 2350 0.00e+00 0.00e+00 **** 1412710.6 Lexicase, Random 3 4 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness Lexicase Tournament 47 50 2255 0.00e+00 0.00e+00 **** 1573224.7 Lexicase , Tournament 3 5 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness Random Tournament 50 50 173 0.00e+00 0.00e+00 **** 1733738.9 Random , Tournament 4 5 p &lt; 1e-04 Looks like everything except fitness sharing and tournament are significantly different from each other. # Raincloud plot of final mean evolutionary distinctiveness ggplot( final_data, aes( x=selection_name, y=mean_phenotype_evolutionary_distinctiveness, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_log10( name=&quot;Mean evolutionary distinctiveness&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) Again, this looks fairly similar to MPD, except that fitness sharing and tournament are higher. 2.4 Phenotypic diversity Now we analyze phenotypic (i.e. population-level) diversity. Here, we’re defining phenotypes to only include the sites that are actively contributing to fitness. So the phenotype of [1,4,2,6,5,4,3,6,7] would be [0,0,0,6,5,4,3,0,0]. Note that phylogenetic trees are also built using this conception of phenotypes. 2.4.1 Relationship between different types of phenotypic diversity First, we should assess the extent to which different metrics of phenotypic diversity are capturing different information. ggplot( data %&gt;% filter(gen==500000), aes( y=phen_diversity, x=phen_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic shannon diversity&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Looks like at the final time point they are pretty much always closely correlated, although this correlation is weaker for lexicase selection than for other selection schemes. 2.4.2 Over time Now we examine the behavior of each phenotypic diversity metric over time. 2.4.2.1 Richness ggplot( data, aes( x=gen, y=phen_num_taxa, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_log10( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) In contrast to the phylodiversity results, phenotypic richness in all selection schemes (even tournament selection) ultimately exceeds that of random selection. Eco-EA monotonically increases while lexicase selection reaches a maximum around the same time it reaches its fitness plateau. The only real similarity to the phylodiversity results is the behavior tournament selection and fitness sharing relative to each other. 2.4.2.2 Shannon diversity We also looked at phenotypic shannon diversity: ggplot( data, aes( x=gen, y=phen_diversity, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Phenotypic Shannon entropy&quot; ) + scale_x_log10( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) This is more different from the richness results than we might have expected based on the correlation at the final time point. There is a much more pronounced drop off in Shannon entropy for tournament and fitness sharing than in richness. This difference is probably driven by the fact that, after plateauing, these selection schemes are likely both at mutation-selection balance. Thus, there are very many single-mutant phenotypes with only one copy in the population. These do not contribute much to Shannon entropy or phylogenetic diversity, but it does show up in richness. We also see that, after plataeuing, lexicase selection does actually start to decrease in Shannon entropy, but slowly. Similarly, in Eco-EA, the increase in Shannon entropy towards the end is much more modest than the increase in richness. 2.4.3 Final Now we assess the final phenotypic diversity 2.4.3.1 Richness Hypothesis-testing differences between groups: # Determine which conditions are significantly diferrent from each other stat.test &lt;- final_data %&gt;% wilcox_test(phen_num_taxa ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label phen_num_taxa EcoEA Fitness Sharing 50 50 2249.0 0.00e+00 0.0e+00 **** 326 EcoEA , Fitness Sharing 1 2 p &lt; 1e-04 phen_num_taxa EcoEA Lexicase 50 47 2319.0 0.00e+00 0.0e+00 **** 456 EcoEA , Lexicase 1 3 p &lt; 1e-04 phen_num_taxa EcoEA Random 50 50 2500.0 0.00e+00 0.0e+00 **** 586 EcoEA , Random 1 4 p &lt; 1e-04 phen_num_taxa EcoEA Tournament 50 50 2378.5 0.00e+00 0.0e+00 **** 716 EcoEA , Tournament 1 5 p &lt; 1e-04 phen_num_taxa Fitness Sharing Lexicase 50 47 1428.0 6.80e-02 6.8e-01 ns 846 Fitness Sharing, Lexicase 2 3 p = 0.68 phen_num_taxa Fitness Sharing Random 50 50 1973.0 6.00e-07 6.3e-06 **** 976 Fitness Sharing, Random 2 4 p &lt; 1e-04 phen_num_taxa Fitness Sharing Tournament 50 50 1585.0 2.10e-02 2.1e-01 ns 1106 Fitness Sharing, Tournament 2 5 p = 0.21 phen_num_taxa Lexicase Random 47 50 2339.5 0.00e+00 0.0e+00 **** 1236 Lexicase, Random 3 4 p &lt; 1e-04 phen_num_taxa Lexicase Tournament 47 50 1359.0 1.85e-01 1.0e+00 ns 1366 Lexicase , Tournament 3 5 p = 1 phen_num_taxa Random Tournament 50 50 797.0 2.00e-03 2.0e-02 1496 Random , Tournament 4 5 p = 0.02 Raincloud plot: # Raincloud plot of final phenotypic diversity final_phenotypic_fig &lt;- ggplot( final_data, aes( x=selection_name, y=phen_num_taxa, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Phenotypic Richness&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) final_phenotypic_fig Nothing particularly suprising here, but we should note that, based on the over time plot, this would look a lot different if we had selected a different time point. 2.4.3.2 Shannon diversity # Determine which conditions are significantly diferrent from each other stat.test &lt;- final_data %&gt;% wilcox_test(phen_diversity~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label phen_diversity EcoEA Fitness Sharing 50 50 2478.0 0.00e+00 0.00e+00 **** 9.602 EcoEA , Fitness Sharing 1 2 p &lt; 1e-04 phen_diversity EcoEA Lexicase 50 47 1772.0 1.66e-05 1.66e-04 *** 13.012 EcoEA , Lexicase 1 3 p = 0.000166 phen_diversity EcoEA Random 50 50 2089.5 0.00e+00 1.00e-07 **** 16.422 EcoEA , Random 1 4 p &lt; 1e-04 phen_diversity EcoEA Tournament 50 50 2496.0 0.00e+00 0.00e+00 **** 19.832 EcoEA , Tournament 1 5 p &lt; 1e-04 phen_diversity Fitness Sharing Lexicase 50 47 0.0 0.00e+00 0.00e+00 **** 23.242 Fitness Sharing, Lexicase 2 3 p &lt; 1e-04 phen_diversity Fitness Sharing Random 50 50 0.0 0.00e+00 0.00e+00 **** 26.652 Fitness Sharing, Random 2 4 p &lt; 1e-04 phen_diversity Fitness Sharing Tournament 50 50 1856.0 2.99e-05 2.99e-04 *** 30.062 Fitness Sharing, Tournament 2 5 p = 0.000299 phen_diversity Lexicase Random 47 50 1714.0 1.01e-04 1.01e-03 ** 33.472 Lexicase, Random 3 4 p = 0.00101 phen_diversity Lexicase Tournament 47 50 2350.0 0.00e+00 0.00e+00 **** 36.882 Lexicase , Tournament 3 5 p &lt; 1e-04 phen_diversity Random Tournament 50 50 2500.0 0.00e+00 0.00e+00 **** 40.292 Random , Tournament 4 5 p &lt; 1e-04 Interestingly, the final shannon diversity values of different selection schemes are much more distinguishable from each other than the final richness values. # Raincloud plot of final phenotypic diversity ggplot( final_data, aes( x=selection_name, y=phen_num_taxa, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Phenotypic Shannon Diversity&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) Again, we know from the time series plots that these relative relationships varied a lot over time. Eco-EA is only higher than lexicase selection at the very end. 2.5 Relationship between phenotypic and phylogenetic diversity Now, we can finally begin to address the main questions. Do phenotypic diversity and phylogenetic diversity capture different information? 2.5.1 Phenotypic richness vs. mean pairwise distance ggplot( data %&gt;% filter(gen==500000), aes( y=phen_num_taxa, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) The linear models for some of these are questionable, but the Spearman correlation coefficient should be fine because it does not require linearity. Only tournament selection is significantly different from 0. Eco-EA is even negative (although non-significant), which is probably driven by the fact that there are really two groups of runs in Eco-EA: those that have found a good solution and had their diversity crash, and those that haven’t yet. Lets take a look at how each of those groups behave (we’ll show fitness as color, just to better understand what’s happening): ggplot( data %&gt;% filter(gen==500000, selection_name == &quot;EcoEA&quot;), aes( y=phen_num_taxa, x=mean_phenotype_pairwise_distance, color = elite_trait_avg ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~mean_phenotype_pairwise_distance &gt; 100, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + scale_color_continuous(type=&quot;viridis&quot;) 2.5.2 Phenotypic richness vs. mean evolutionary distinctiveness ggplot( data %&gt;% filter(gen==500000), aes( y=phen_num_taxa, x=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_continuous( name=&quot;Mean evolutionary distinctiveness&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) These are mostly significant, but negative. That’s interesting and worthy of further exploration (but it’s a little beyond the scope of this analysis). 2.5.3 Phenotypic shannon diversity vs. mean pairwise distance ggplot( data %&gt;% filter(gen==500000), aes( y=phen_diversity, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic shannon diversity&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Again, these are mostly not significant (although fitness sharing notably now is). 2.5.4 Phenotypic shannon diversity vs. mean evolutionary distinctiveness ggplot( data %&gt;% filter(gen==500000), aes( y=phen_diversity, x=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic shannon diversity&quot; ) + scale_x_continuous( name=&quot;Mean evolutionary distinctiveness&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Again, all significant but negative. From this we can conclude that there is substantially more overlap between the information captured by phenotypic diversity and mean evolutionary disinctiveness than between phenotypic diversity metrics and mean pairwise distance. However, thus information has wildly different implications in the two contexts. Moreover, the long term trends are still very different. Thus, we still feel confident in saying that these metrics are meaningfully different. More investigation here may be worthwhile in the future. Overall, based on these end of time analyses and qualitative comparison of the temporal graphs, we conclude that phenotypic and phylogenetic diversity are meaningfully different from each other in the context of evolutionary computation. In retrospect, this finding may seem obvious. However a lot of people tend to assume that these two classes of diversity are closely related. 2.6 Relationship between diversity and success At last, we can finally assess whether diversity leads to actually solving problems! We start out by looking at correlations between diversity success across a few different time points, although we ultimately conclude that this approach is not particularly informative. 2.6.1 Very early in run 2.6.1.1 Mean pairwise distance ggplot( data %&gt;% filter(gen==25000), aes( y=elite_trait_avg, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.1.2 Mean evolutionary distinctiveness ggplot( data %&gt;% filter(gen==25000), aes( y=elite_trait_avg, x=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean evolutionary distinctiveness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.1.3 Richness ggplot( data %&gt;% filter(gen==25000), aes( y=elite_trait_avg, x=phen_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.1.4 Shannon diversity ggplot( data %&gt;% filter(gen==25000), aes( y=elite_trait_avg, x=phen_diversity, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic Shannon diversity&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.2 Middle of run 2.6.2.1 Mean pairwise distance ggplot( data %&gt;% filter(gen==50000), aes( y=elite_trait_avg, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.2.2 Mean evolutionary distinctiveness ggplot( data %&gt;% filter(gen==50000), aes( y=elite_trait_avg, x=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean evolutionary distinctiveness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.2.3 Richness ggplot( data %&gt;% filter(gen==50000), aes( y=elite_trait_avg, x=phen_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.2.4 Shannon diversity ggplot( data %&gt;% filter(gen==50000), aes( y=elite_trait_avg, x=phen_diversity, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic Shannon diversity&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.3 End of run 2.6.3.1 Mean pairwise distance ggplot( final_data, aes( y=elite_trait_avg, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.3.2 Mean evolutionary distinctiveness ggplot( final_data, aes( y=elite_trait_avg, x=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean evolutionary distinctiveness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.3.3 Richness ggplot( final_data, aes( y=elite_trait_avg, x=phen_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.3.4 Shannon diversity ggplot( final_data, aes( y=elite_trait_avg, x=phen_diversity, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic Shannon diversity&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.7 Causality analysis Ultimately, it’s hard to draw useful inferences either from these single time point analyses or from comparison of line plots. Due to the feedbacks between diversity and performance, there may be a time delay in when one affects the other. To analyze the drivers of this feedback loop in a more rigorous way, we turn to Transfer Entropy as a metric of Granger Causality. For a more thorough description, see the paper associated with this supplement. 2.7.1 Setup First let’s define a function we’ll use to calculate and output significance and effect size for these results: transfer_entropy_stats &lt;- function(res) { stat.test &lt;- res %&gt;% group_by(selection_name, offset) %&gt;% wilcox_test(value ~ Type) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() stat.test$label &lt;- mapply(p_label,stat.test$p.adj) # Calculate effect sizes for these differences effect_sizes &lt;- res %&gt;% group_by(selection_name, offset) %&gt;% wilcox_effsize(value ~ Type) stat.test$effsize &lt;- effect_sizes$effsize stat.test$magnitude &lt;- effect_sizes$magnitude stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) } 2.7.2 Transfer entropy from diversity to fitness First, we calculate the information that each type of diversity gives us about future fitness. 2.7.2.1 Max pairwise distance vs. phenotypic richness We plot the differences in transfer entropy from phylogenetic diversity to fitness and from phenotypic diversity to fitness, at a range of different lags. # Calculate transfer entropy for max pairwise distance # Time points are 10 generations, so calculating lag 1 gives us lag 10 res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10 discretize(lag(max_phenotype_pairwise_distance, 1)), discretize(lag(elite_trait_avg, 1))), fit_phylo_100 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100 discretize(lag(max_phenotype_pairwise_distance, 10)), discretize(lag(elite_trait_avg, 10))), fit_phylo_1000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 1000 discretize(lag(max_phenotype_pairwise_distance, 100)), discretize(lag(elite_trait_avg, 100))), fit_phylo_10000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10000 discretize(lag(max_phenotype_pairwise_distance, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_phylo_100000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100000 discretize(lag(max_phenotype_pairwise_distance, 10000)), discretize(lag(elite_trait_avg, 10000))), fit_fit_10000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 1000)), discretize(lag(max_phenotype_pairwise_distance, 1000))), fit_fit_100000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 10000)), discretize(lag(max_phenotype_pairwise_distance, 10000))), fit_pheno_10 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10 discretize(lag(phen_num_taxa, 1)), discretize(lag(elite_trait_avg, 1))), fit_pheno_100 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100 discretize(lag(phen_num_taxa, 10)), discretize(lag(elite_trait_avg, 10))), fit_pheno_1000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 1000 discretize(lag(phen_num_taxa, 100)), discretize(lag(elite_trait_avg, 100))), fit_pheno_10000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10000 discretize(lag(phen_num_taxa, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_pheno_100000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100000 discretize(lag(phen_num_taxa, 10000)), discretize(lag(elite_trait_avg, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) # Plot transfer entropy ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) Next we calculate statistics to quantify these differences # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic Phylogenetic 50 50 466 1.00e-07 0.0000017 **** p &lt; 1e-04 0.5404755 large EcoEA 100 value Phenotypic Phylogenetic 50 50 234 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7004121 large EcoEA 1000 value Phenotypic Phylogenetic 50 50 192 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7293661 large EcoEA 10000 value Phenotypic Phylogenetic 50 50 165 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7479795 large EcoEA 100000 value Phenotypic Phylogenetic 50 50 242 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6948970 large Fitness Sharing 10 value Phenotypic Phylogenetic 50 50 798 1.85e-03 0.0462500 p = 0.04625 0.3116007 moderate Fitness Sharing 100 value Phenotypic Phylogenetic 50 50 759 7.21e-04 0.0180250 p = 0.018025 0.3384866 moderate Fitness Sharing 1000 value Phenotypic Phylogenetic 50 50 826 3.51e-03 0.0877500 ns p = 0.08775 0.2922980 small Fitness Sharing 10000 value Phenotypic Phylogenetic 50 50 661 4.97e-05 0.0012425 ** p = 0.0012425 0.4060460 moderate Fitness Sharing 100000 value Phenotypic Phylogenetic 50 50 436 0.00e+00 0.0000005 **** p &lt; 1e-04 0.5611569 large Lexicase 10 value Phenotypic Phylogenetic 50 50 195 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7272980 large Lexicase 100 value Phenotypic Phylogenetic 50 50 173 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7424644 large Lexicase 1000 value Phenotypic Phylogenetic 50 50 34 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8382885 large Lexicase 10000 value Phenotypic Phylogenetic 50 50 6 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8575912 large Lexicase 100000 value Phenotypic Phylogenetic 50 50 1 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8610381 large Random 10 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 1000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 10000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100000 value Phenotypic Phylogenetic 50 50 358 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6149287 large Tournament 10 value Phenotypic Phylogenetic 50 50 1810 1.15e-04 0.0028750 ** p = 0.002875 0.3860539 moderate Tournament 100 value Phenotypic Phylogenetic 50 50 2024 1.00e-07 0.0000024 **** p &lt; 1e-04 0.5335817 large Tournament 1000 value Phenotypic Phylogenetic 50 50 2165 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6307845 large Tournament 10000 value Phenotypic Phylogenetic 50 50 2322 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7390175 large Tournament 100000 value Phenotypic Phylogenetic 50 50 1336 5.56e-01 1.0000000 ns p = 1 0.0592869 small 2.7.2.2 Mean pairwise distance vs. phenotypic richness # Calculate transfer entropy for mean pairwise distance # Time points are 10 generations, so calculating lag 1 gives us lag 10 res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10 discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(elite_trait_avg, 1))), fit_phylo_100 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100 discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(elite_trait_avg, 10))), fit_phylo_1000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 1000 discretize(lag(mean_phenotype_pairwise_distance, 100)), discretize(lag(elite_trait_avg, 100))), fit_phylo_10000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10000 discretize(lag(mean_phenotype_pairwise_distance, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_phylo_100000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100000 discretize(lag(mean_phenotype_pairwise_distance, 10000)), discretize(lag(elite_trait_avg, 10000))), fit_fit_10000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 1000)), discretize(lag(mean_phenotype_pairwise_distance, 1000))), fit_fit_100000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 10000)), discretize(lag(mean_phenotype_pairwise_distance, 10000))), fit_pheno_10 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10 discretize(lag(phen_num_taxa, 1)), discretize(lag(elite_trait_avg, 1))), fit_pheno_100 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100 discretize(lag(phen_num_taxa, 10)), discretize(lag(elite_trait_avg, 10))), fit_pheno_1000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 1000 discretize(lag(phen_num_taxa, 100)), discretize(lag(elite_trait_avg, 100))), fit_pheno_10000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10000 discretize(lag(phen_num_taxa, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_pheno_100000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100000 discretize(lag(phen_num_taxa, 10000)), discretize(lag(elite_trait_avg, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) # Plot transfer entropy ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) Mean and max pairwise distance appear to behave virtually identically. # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic Phylogenetic 50 50 288 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6631855 large EcoEA 100 value Phenotypic Phylogenetic 50 50 256 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6852457 large EcoEA 1000 value Phenotypic Phylogenetic 50 50 330 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6342314 large EcoEA 10000 value Phenotypic Phylogenetic 50 50 209 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7176466 large EcoEA 100000 value Phenotypic Phylogenetic 50 50 381 0.00e+00 0.0000001 **** p &lt; 1e-04 0.5990729 large Fitness Sharing 10 value Phenotypic Phylogenetic 50 50 521 5.00e-07 0.0000128 **** p &lt; 1e-04 0.5025595 large Fitness Sharing 100 value Phenotypic Phylogenetic 50 50 550 1.40e-06 0.0000355 **** p &lt; 1e-04 0.4825674 moderate Fitness Sharing 1000 value Phenotypic Phylogenetic 50 50 612 1.11e-05 0.0002775 *** p = 0.0002775 0.4398257 moderate Fitness Sharing 10000 value Phenotypic Phylogenetic 50 50 459 1.00e-07 0.0000013 **** p &lt; 1e-04 0.5453012 large Fitness Sharing 100000 value Phenotypic Phylogenetic 50 50 350 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6204438 large Lexicase 10 value Phenotypic Phylogenetic 50 50 195 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7272980 large Lexicase 100 value Phenotypic Phylogenetic 50 50 220 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7100634 large Lexicase 1000 value Phenotypic Phylogenetic 50 50 333 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6321633 large Lexicase 10000 value Phenotypic Phylogenetic 50 50 142 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7638352 large Lexicase 100000 value Phenotypic Phylogenetic 50 50 115 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7824486 large Random 10 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 1000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 10000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100000 value Phenotypic Phylogenetic 50 50 538 9.00e-07 0.0000233 **** p &lt; 1e-04 0.4908400 moderate Tournament 10 value Phenotypic Phylogenetic 50 50 928 2.67e-02 0.6675000 ns p = 0.6675 0.2219810 small Tournament 100 value Phenotypic Phylogenetic 50 50 1105 3.19e-01 1.0000000 ns p = 1 0.0999604 small Tournament 1000 value Phenotypic Phylogenetic 50 50 1184 6.52e-01 1.0000000 ns p = 1 0.0454992 small Tournament 10000 value Phenotypic Phylogenetic 50 50 1188 6.72e-01 1.0000000 ns p = 1 0.0427417 small Tournament 100000 value Phenotypic Phylogenetic 50 50 618 1.34e-05 0.0003350 *** p = 0.000335 0.4356894 moderate 2.7.2.3 Mean pairwise distance vs. shannon entropy # Calculate transfer entropy for mean pairwise distance # Time points are 10 generations, so calculating lag 1 gives us lag 10 res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10 discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(elite_trait_avg, 1))), fit_phylo_100 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100 discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(elite_trait_avg, 10))), fit_phylo_1000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 1000 discretize(lag(mean_phenotype_pairwise_distance, 100)), discretize(lag(elite_trait_avg, 100))), fit_phylo_10000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10000 discretize(lag(mean_phenotype_pairwise_distance, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_phylo_100000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100000 discretize(lag(mean_phenotype_pairwise_distance, 10000)), discretize(lag(elite_trait_avg, 10000))), fit_fit_10000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 1000)), discretize(lag(mean_phenotype_pairwise_distance, 1000))), fit_fit_100000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 10000)), discretize(lag(mean_phenotype_pairwise_distance, 10000))), fit_pheno_10 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10 discretize(lag(phen_diversity, 1)), discretize(lag(elite_trait_avg, 1))), fit_pheno_100 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100 discretize(lag(phen_diversity, 10)), discretize(lag(elite_trait_avg, 10))), fit_pheno_1000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 1000 discretize(lag(phen_diversity, 100)), discretize(lag(elite_trait_avg, 100))), fit_pheno_10000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10000 discretize(lag(phen_diversity, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_pheno_100000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100000 discretize(lag(phen_diversity, 10000)), discretize(lag(elite_trait_avg, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) # Plot transfer entropy ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) Looks like Shannon Diversity is more predictive of fitness than phenotypic richness (at least for lexicase), although still not as much as mean pairwise distance. # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic Phylogenetic 50 50 789 1.50e-03 0.0375000 p = 0.0375 0.3178051 moderate EcoEA 100 value Phenotypic Phylogenetic 50 50 666 5.76e-05 0.0014400 ** p = 0.00144 0.4025991 moderate EcoEA 1000 value Phenotypic Phylogenetic 50 50 678 8.15e-05 0.0020375 ** p = 0.0020375 0.3943265 moderate EcoEA 10000 value Phenotypic Phylogenetic 50 50 291 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6611173 large EcoEA 100000 value Phenotypic Phylogenetic 50 50 445 0.00e+00 0.0000007 **** p &lt; 1e-04 0.5549525 large Fitness Sharing 10 value Phenotypic Phylogenetic 50 50 706 1.79e-04 0.0044750 ** p = 0.004475 0.3750238 moderate Fitness Sharing 100 value Phenotypic Phylogenetic 50 50 726 3.07e-04 0.0076750 ** p = 0.007675 0.3612362 moderate Fitness Sharing 1000 value Phenotypic Phylogenetic 50 50 781 1.24e-03 0.0310000 p = 0.031 0.3233202 moderate Fitness Sharing 10000 value Phenotypic Phylogenetic 50 50 617 1.30e-05 0.0003250 *** p = 0.000325 0.4363788 moderate Fitness Sharing 100000 value Phenotypic Phylogenetic 50 50 538 9.00e-07 0.0000233 **** p &lt; 1e-04 0.4908400 moderate Lexicase 10 value Phenotypic Phylogenetic 50 50 561 2.10e-06 0.0000518 **** p &lt; 1e-04 0.4749842 moderate Lexicase 100 value Phenotypic Phylogenetic 50 50 612 1.11e-05 0.0002775 *** p = 0.0002775 0.4398257 moderate Lexicase 1000 value Phenotypic Phylogenetic 50 50 829 3.75e-03 0.0937500 ns p = 0.09375 0.2902298 small Lexicase 10000 value Phenotypic Phylogenetic 50 50 610 1.04e-05 0.0002600 *** p = 0.00026 0.4412045 moderate Lexicase 100000 value Phenotypic Phylogenetic 50 50 611 1.07e-05 0.0002675 *** p = 0.0002675 0.4405151 moderate Random 10 value Phenotypic Phylogenetic 50 50 404 0.00e+00 0.0000001 **** p &lt; 1e-04 0.5832172 large Random 100 value Phenotypic Phylogenetic 50 50 1 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8610381 large Random 1000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 10000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100000 value Phenotypic Phylogenetic 50 50 580 3.90e-06 0.0000980 **** p &lt; 1e-04 0.4618859 moderate Tournament 10 value Phenotypic Phylogenetic 50 50 1241 9.53e-01 1.0000000 ns p = 1 0.0062044 small Tournament 100 value Phenotypic Phylogenetic 50 50 1225 8.66e-01 1.0000000 ns p = 1 0.0172345 small Tournament 1000 value Phenotypic Phylogenetic 50 50 1265 9.20e-01 1.0000000 ns p = 1 0.0103407 small Tournament 10000 value Phenotypic Phylogenetic 50 50 1217 8.23e-01 1.0000000 ns p = 1 0.0227496 small Tournament 100000 value Phenotypic Phylogenetic 50 50 1105 3.19e-01 1.0000000 ns p = 1 0.0999604 small 2.7.2.4 Mean evolutionary distinctiveness vs. phenotypic richness # Calculate transfer entropy for mean evolutionary distinctiveness # Time points are 10 generations, so calculating lag 1 gives us lag 10 res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(elite_trait_avg, 1))), fit_phylo_100 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(elite_trait_avg, 10))), fit_phylo_1000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 1000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(elite_trait_avg, 100))), fit_phylo_10000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_phylo_100000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000)), discretize(lag(elite_trait_avg, 10000))), fit_fit_10000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 1000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000))), fit_fit_100000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 10000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000))), fit_pheno_10 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10 discretize(lag(phen_num_taxa, 1)), discretize(lag(elite_trait_avg, 1))), fit_pheno_100 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100 discretize(lag(phen_num_taxa, 10)), discretize(lag(elite_trait_avg, 10))), fit_pheno_1000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 1000 discretize(lag(phen_num_taxa, 100)), discretize(lag(elite_trait_avg, 100))), fit_pheno_10000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10000 discretize(lag(phen_num_taxa, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_pheno_100000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100000 discretize(lag(phen_num_taxa, 10000)), discretize(lag(elite_trait_avg, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) # Plot transfer entropy ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) Interestingly, mean evolutionary distinctiveness looks fairly comparable to mean pairwise distance (although note that the y axis doesn’t go quite as far). # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic Phylogenetic 50 50 543 1.10e-06 0.0000278 **** p &lt; 1e-04 0.4873931 moderate EcoEA 100 value Phenotypic Phylogenetic 50 50 536 9.00e-07 0.0000218 **** p &lt; 1e-04 0.4922187 moderate EcoEA 1000 value Phenotypic Phylogenetic 50 50 644 2.99e-05 0.0007475 *** p = 0.0007475 0.4177655 moderate EcoEA 10000 value Phenotypic Phylogenetic 50 50 380 0.00e+00 0.0000001 **** p &lt; 1e-04 0.5997623 large EcoEA 100000 value Phenotypic Phylogenetic 50 50 501 2.00e-07 0.0000062 **** p &lt; 1e-04 0.5163471 large Fitness Sharing 10 value Phenotypic Phylogenetic 50 50 531 7.00e-07 0.0000182 **** p &lt; 1e-04 0.4956656 moderate Fitness Sharing 100 value Phenotypic Phylogenetic 50 50 551 1.50e-06 0.0000368 **** p &lt; 1e-04 0.4818780 moderate Fitness Sharing 1000 value Phenotypic Phylogenetic 50 50 423 0.00e+00 0.0000003 **** p &lt; 1e-04 0.5701189 large Fitness Sharing 10000 value Phenotypic Phylogenetic 50 50 321 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6404359 large Fitness Sharing 100000 value Phenotypic Phylogenetic 50 50 107 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7879636 large Lexicase 10 value Phenotypic Phylogenetic 50 50 237 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6983440 large Lexicase 100 value Phenotypic Phylogenetic 50 50 275 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6721474 large Lexicase 1000 value Phenotypic Phylogenetic 50 50 516 4.00e-07 0.0000107 **** p &lt; 1e-04 0.5060064 large Lexicase 10000 value Phenotypic Phylogenetic 50 50 220 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7100634 large Lexicase 100000 value Phenotypic Phylogenetic 50 50 178 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7390175 large Random 10 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 1000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 10000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100000 value Phenotypic Phylogenetic 50 50 893 1.40e-02 0.3500000 ns p = 0.35 0.2461094 small Tournament 10 value Phenotypic Phylogenetic 50 50 654 4.04e-05 0.0010100 ** p = 0.00101 0.4108717 moderate Tournament 100 value Phenotypic Phylogenetic 50 50 718 2.48e-04 0.0062000 ** p = 0.0062 0.3667512 moderate Tournament 1000 value Phenotypic Phylogenetic 50 50 735 3.90e-04 0.0097500 ** p = 0.00975 0.3550317 moderate Tournament 10000 value Phenotypic Phylogenetic 50 50 180 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7376387 large Tournament 100000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large 2.7.2.5 Mean evolutionary distinctiveness vs. shannon entropy # Calculate transfer entropy for mean evolutionary distinctiveness # Time points are 10 generations, so calculating lag 1 gives us lag 10 res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(elite_trait_avg, 1))), fit_phylo_100 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(elite_trait_avg, 10))), fit_phylo_1000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 1000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(elite_trait_avg, 100))), fit_phylo_10000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_phylo_100000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000)), discretize(lag(elite_trait_avg, 10000))), fit_fit_10000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 1000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000))), fit_fit_100000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 10000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000))), fit_pheno_10 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10 discretize(lag(phen_diversity, 1)), discretize(lag(elite_trait_avg, 1))), fit_pheno_100 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100 discretize(lag(phen_diversity, 10)), discretize(lag(elite_trait_avg, 10))), fit_pheno_1000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 1000 discretize(lag(phen_diversity, 100)), discretize(lag(elite_trait_avg, 100))), fit_pheno_10000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10000 discretize(lag(phen_diversity, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_pheno_100000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100000 discretize(lag(phen_diversity, 10000)), discretize(lag(elite_trait_avg, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) # Plot transfer entropy ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic Phylogenetic 50 50 1381 3.68e-01 1.0000000 ns p = 1 0.0903090 small EcoEA 100 value Phenotypic Phylogenetic 50 50 1356 4.67e-01 1.0000000 ns p = 1 0.0730745 small EcoEA 1000 value Phenotypic Phylogenetic 50 50 1345 5.15e-01 1.0000000 ns p = 1 0.0654913 small EcoEA 10000 value Phenotypic Phylogenetic 50 50 527 6.00e-07 0.0000158 **** p &lt; 1e-04 0.4984232 moderate EcoEA 100000 value Phenotypic Phylogenetic 50 50 585 4.60e-06 0.0001158 *** p = 0.00011575 0.4584390 moderate Fitness Sharing 10 value Phenotypic Phylogenetic 50 50 816 2.80e-03 0.0700000 ns p = 0.07 0.2991918 small Fitness Sharing 100 value Phenotypic Phylogenetic 50 50 839 4.66e-03 0.1165000 ns p = 0.1165 0.2833360 small Fitness Sharing 1000 value Phenotypic Phylogenetic 50 50 620 1.43e-05 0.0003575 *** p = 0.0003575 0.4343107 moderate Fitness Sharing 10000 value Phenotypic Phylogenetic 50 50 452 0.00e+00 0.0000010 **** p &lt; 1e-04 0.5501268 large Fitness Sharing 100000 value Phenotypic Phylogenetic 50 50 328 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6356102 large Lexicase 10 value Phenotypic Phylogenetic 50 50 644 2.99e-05 0.0007475 *** p = 0.0007475 0.4177655 moderate Lexicase 100 value Phenotypic Phylogenetic 50 50 700 1.52e-04 0.0038000 ** p = 0.0038 0.3791601 moderate Lexicase 1000 value Phenotypic Phylogenetic 50 50 1043 1.55e-01 1.0000000 ns p = 1 0.1427021 small Lexicase 10000 value Phenotypic Phylogenetic 50 50 766 8.59e-04 0.0214750 p = 0.021475 0.3336609 moderate Lexicase 100000 value Phenotypic Phylogenetic 50 50 693 1.25e-04 0.0031250 ** p = 0.003125 0.3839858 moderate Random 10 value Phenotypic Phylogenetic 50 50 718 2.48e-04 0.0062000 ** p = 0.0062 0.3667512 moderate Random 100 value Phenotypic Phylogenetic 50 50 271 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6749050 large Random 1000 value Phenotypic Phylogenetic 50 50 72 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8120920 large Random 10000 value Phenotypic Phylogenetic 50 50 130 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7721078 large Random 100000 value Phenotypic Phylogenetic 50 50 957 4.38e-02 1.0000000 ns p = 1 0.2019889 small Tournament 10 value Phenotypic Phylogenetic 50 50 1034 1.37e-01 1.0000000 ns p = 1 0.1489065 small Tournament 100 value Phenotypic Phylogenetic 50 50 867 8.37e-03 0.2092500 ns p = 0.20925 0.2640333 small Tournament 1000 value Phenotypic Phylogenetic 50 50 791 1.57e-03 0.0392500 p = 0.03925 0.3164263 moderate Tournament 10000 value Phenotypic Phylogenetic 50 50 195 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7272980 large Tournament 100000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large 2.7.3 Transfer entropy between types of diversity While we’re calculating transfer entropy, we might as well also calculate it between phenotypic diversity and phylogenetic diversity, as these could potentially also be in a feedback loop. 2.7.3.1 Max pairwise distance and phenotypic richness res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phen_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 1)), discretize(lag(phen_num_taxa, 1))), phen_phylo_100 = condinformation(discretize(phen_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 10)), discretize(lag(phen_num_taxa, 10))), pheno_phylo_1000 = condinformation(discretize(phen_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 100)), discretize(lag(phen_num_taxa, 100))), pheno_phylo_10000 = condinformation(discretize(phen_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 1000)), discretize(lag(phen_num_taxa, 1000))), pheno_phylo_100000 = condinformation(discretize(phen_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 10000)), discretize(lag(phen_num_taxa, 10000))), phylo_pheno_10 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 1)), discretize(lag(max_phenotype_pairwise_distance, 1))), phylo_pheno_100 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 10)), discretize(lag(max_phenotype_pairwise_distance, 10))), phylo_pheno_1000 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 100)), discretize(lag(max_phenotype_pairwise_distance, 100))), phylo_pheno_10000 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 1000)), discretize(lag(max_phenotype_pairwise_distance, 1000))), phylo_pheno_100000 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 10000)), discretize(lag(max_phenotype_pairwise_distance, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 23 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8458717 large EcoEA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 35 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8375991 large EcoEA 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 27 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8431142 large EcoEA 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 38 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8355310 large EcoEA 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 69 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8141601 large Fitness Sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 768 9.02e-04 0.0225500 p = 0.02255 0.3322821 moderate Fitness Sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 747 5.32e-04 0.0133000 p = 0.0133 0.3467591 moderate Fitness Sharing 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 666 5.76e-05 0.0014400 ** p = 0.00144 0.4025991 moderate Fitness Sharing 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 732 3.60e-04 0.0090000 ** p = 0.009 0.3570999 moderate Fitness Sharing 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 745 5.05e-04 0.0126250 p = 0.012625 0.3481379 moderate Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8610381 large Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 15 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8513868 large Random 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2497 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8596593 large Random 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2479 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8472505 large Random 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1849 3.69e-05 0.0009225 *** p = 0.0009225 0.4129398 moderate Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 168 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7459113 large Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 53 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8251902 large Tournament 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 74 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8107132 large Tournament 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 60 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8203646 large Tournament 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 115 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7824486 large 2.7.3.2 Mean pairwise distance and phenotypic richness res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phen_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(phen_num_taxa, 1))), phen_phylo_100 = condinformation(discretize(phen_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(phen_num_taxa, 10))), pheno_phylo_1000 = condinformation(discretize(phen_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 100)), discretize(lag(phen_num_taxa, 100))), pheno_phylo_10000 = condinformation(discretize(phen_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 1000)), discretize(lag(phen_num_taxa, 1000))), pheno_phylo_100000 = condinformation(discretize(phen_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 10000)), discretize(lag(phen_num_taxa, 10000))), phylo_pheno_10 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 1)), discretize(lag(mean_phenotype_pairwise_distance, 1))), phylo_pheno_100 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 10)), discretize(lag(mean_phenotype_pairwise_distance, 10))), phylo_pheno_1000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 100)), discretize(lag(mean_phenotype_pairwise_distance, 100))), phylo_pheno_10000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 1000)), discretize(lag(mean_phenotype_pairwise_distance, 1000))), phylo_pheno_100000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 10000)), discretize(lag(mean_phenotype_pairwise_distance, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) Here, on the other hand, there’s a pretty notable difference between mean and max pairwise distance. Looks like max pairwise distance is in general more predictive of phenotypic richness than mean pairwise distance is (for fitness sharing, mean richness even has a high transfer entropy to MPD than the other way around). # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 342 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6259588 large EcoEA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 488 2.00e-07 0.0000038 **** p &lt; 1e-04 0.5253091 large EcoEA 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 661 4.97e-05 0.0012425 ** p = 0.0012425 0.4060460 moderate EcoEA 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 720 2.62e-04 0.0065500 ** p = 0.00655 0.3653725 moderate EcoEA 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 735 3.90e-04 0.0097500 ** p = 0.00975 0.3550317 moderate Fitness Sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1602 1.54e-02 0.3850000 ns p = 0.385 0.2426625 small Fitness Sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1653 5.52e-03 0.1380000 ns p = 0.138 0.2778209 small Fitness Sharing 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1369 4.14e-01 1.0000000 ns p = 1 0.0820365 small Fitness Sharing 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1744 6.69e-04 0.0167250 p = 0.016725 0.3405547 moderate Fitness Sharing 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1571 2.71e-02 0.6775000 ns p = 0.6775 0.2212916 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 4 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8589700 large Lexicase 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 409 0.00e+00 0.0000002 **** p &lt; 1e-04 0.5797703 large Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8603487 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1771 3.33e-04 0.0083250 ** p = 0.008325 0.3591680 moderate Random 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2500 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2473 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8431142 large Random 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1749 5.89e-04 0.0147250 p = 0.014725 0.3440016 moderate Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1298 7.43e-01 1.0000000 ns p = 1 0.0330903 small Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1306 7.02e-01 1.0000000 ns p = 1 0.0386054 small Tournament 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1301 7.28e-01 1.0000000 ns p = 1 0.0351585 small Tournament 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1276 8.60e-01 1.0000000 ns p = 1 0.0179239 small Tournament 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1280 8.39e-01 1.0000000 ns p = 1 0.0206815 small 2.7.3.3 Mean pairwise distance and shannon diversity res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phen_diversity), discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(phen_diversity, 1))), phen_phylo_100 = condinformation(discretize(phen_diversity), discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(phen_diversity, 10))), pheno_phylo_1000 = condinformation(discretize(phen_diversity), discretize(lag(mean_phenotype_pairwise_distance, 100)), discretize(lag(phen_diversity, 100))), pheno_phylo_10000 = condinformation(discretize(phen_diversity), discretize(lag(mean_phenotype_pairwise_distance, 1000)), discretize(lag(phen_diversity, 1000))), pheno_phylo_100000 = condinformation(discretize(phen_diversity), discretize(lag(mean_phenotype_pairwise_distance, 10000)), discretize(lag(phen_diversity, 10000))), phylo_pheno_10 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_diversity, 1)), discretize(lag(mean_phenotype_pairwise_distance, 1))), phylo_pheno_100 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_diversity, 10)), discretize(lag(mean_phenotype_pairwise_distance, 10))), phylo_pheno_1000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_diversity, 100)), discretize(lag(mean_phenotype_pairwise_distance, 100))), phylo_pheno_10000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_diversity, 1000)), discretize(lag(mean_phenotype_pairwise_distance, 1000))), phylo_pheno_100000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_diversity, 10000)), discretize(lag(mean_phenotype_pairwise_distance, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 101 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7920999 large EcoEA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 176 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7403963 large EcoEA 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 91 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7989937 large EcoEA 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 119 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7796910 large EcoEA 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 473 1.00e-07 0.0000022 **** p &lt; 1e-04 0.5356498 large Fitness Sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 884 1.17e-02 0.2925000 ns p = 0.2925 0.2523138 small Fitness Sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 905 1.76e-02 0.4400000 ns p = 0.44 0.2378368 small Fitness Sharing 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 836 4.36e-03 0.1090000 ns p = 0.109 0.2854041 small Fitness Sharing 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 994 7.82e-02 1.0000000 ns p = 1 0.1764818 small Fitness Sharing 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1247 9.86e-01 1.0000000 ns p = 1 0.0020681 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 6 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8575912 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 9 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8555230 large Lexicase 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 44 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8313947 large Lexicase 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 24 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8451823 large Lexicase 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 195 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7272980 large Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 949 3.83e-02 0.9575000 ns p = 0.9575 0.2075040 small Random 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1558 3.40e-02 0.8500000 ns p = 0.85 0.2123297 small Random 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1304 7.12e-01 1.0000000 ns p = 1 0.0372266 small Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1232 9.04e-01 1.0000000 ns p = 1 0.0124089 small Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1261 9.42e-01 1.0000000 ns p = 1 0.0075832 small Tournament 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1252 9.92e-01 1.0000000 ns p = 1 0.0013788 small Tournament 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1217 8.23e-01 1.0000000 ns p = 1 0.0227496 small Tournament 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1240 9.48e-01 1.0000000 ns p = 1 0.0068938 small 2.7.3.4 Mean evolutionary distinctiveness and phenotypic richness res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( phen_phylo_10 = condinformation( discretize(phen_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(phen_num_taxa, 1))), phen_phylo_100 = condinformation( discretize(phen_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(phen_num_taxa, 10))), pheno_phylo_1000 = condinformation( discretize(phen_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(phen_num_taxa, 100))), pheno_phylo_10000 = condinformation( discretize(phen_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000)), discretize(lag(phen_num_taxa, 1000))), pheno_phylo_100000 = condinformation( discretize(phen_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000)), discretize(lag(phen_num_taxa, 10000))), phylo_pheno_10 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_num_taxa, 1)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1))), phylo_pheno_100 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_num_taxa, 10)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10))), phylo_pheno_1000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_num_taxa, 100)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100))), phylo_pheno_10000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_num_taxa, 1000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000))), phylo_pheno_100000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_num_taxa, 10000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 25 0.00e+00 0.000000 **** p &lt; 1e-04 0.8444929 large EcoEA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 96 0.00e+00 0.000000 **** p &lt; 1e-04 0.7955468 large EcoEA 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 175 0.00e+00 0.000000 **** p &lt; 1e-04 0.7410856 large EcoEA 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 216 0.00e+00 0.000000 **** p &lt; 1e-04 0.7128210 large EcoEA 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 471 1.00e-07 0.000002 **** p &lt; 1e-04 0.5370286 large Fitness Sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 817 2.87e-03 0.071750 ns p = 0.07175 0.2985024 small Fitness Sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 946 3.64e-02 0.910000 ns p = 0.91 0.2095721 small Fitness Sharing 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1303 7.17e-01 1.000000 ns p = 1 0.0365372 small Fitness Sharing 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1795 1.74e-04 0.004350 ** p = 0.00435 0.3757132 moderate Fitness Sharing 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1693 2.28e-03 0.057000 ns p = 0.057 0.3053962 moderate Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Lexicase 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Lexicase 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 154 0.00e+00 0.000000 **** p &lt; 1e-04 0.7555627 large Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1159 5.33e-01 1.000000 ns p = 1 0.0627338 small Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2482 0.00e+00 0.000000 **** p &lt; 1e-04 0.8493186 large Random 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2500 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Random 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2474 0.00e+00 0.000000 **** p &lt; 1e-04 0.8438036 large Random 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1707 1.65e-03 0.041250 p = 0.04125 0.3150476 moderate Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 356 0.00e+00 0.000000 **** p &lt; 1e-04 0.6163075 large Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 454 0.00e+00 0.000001 **** p &lt; 1e-04 0.5487481 large Tournament 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1154 5.10e-01 1.000000 ns p = 1 0.0661807 small Tournament 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1843 4.42e-05 0.001105 ** p = 0.001105 0.4088035 moderate Tournament 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1736 8.17e-04 0.020425 p = 0.020425 0.3350396 moderate 2.7.3.5 Mean evolutionary distinctiveness and shannon diversity res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( phen_phylo_10 = condinformation( discretize(phen_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(phen_diversity, 1))), phen_phylo_100 = condinformation( discretize(phen_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(phen_diversity, 10))), pheno_phylo_1000 = condinformation( discretize(phen_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(phen_diversity, 100))), pheno_phylo_10000 = condinformation( discretize(phen_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000)), discretize(lag(phen_diversity, 1000))), pheno_phylo_100000 = condinformation( discretize(phen_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000)), discretize(lag(phen_diversity, 10000))), phylo_pheno_10 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_diversity, 1)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1))), phylo_pheno_100 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_diversity, 10)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10))), phylo_pheno_1000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_diversity, 100)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100))), phylo_pheno_10000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_diversity, 1000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000))), phylo_pheno_100000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_diversity, 10000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large EcoEA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large EcoEA 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 5 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8582806 large EcoEA 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8603487 large EcoEA 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 289 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6624961 large Fitness Sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 768 9.02e-04 0.0225500 p = 0.02255 0.3322821 moderate Fitness Sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 762 7.77e-04 0.0194250 p = 0.019425 0.3364184 moderate Fitness Sharing 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 809 2.39e-03 0.0597500 ns p = 0.05975 0.3040175 moderate Fitness Sharing 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 988 7.14e-02 1.0000000 ns p = 1 0.1806181 small Fitness Sharing 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1312 6.72e-01 1.0000000 ns p = 1 0.0427417 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 23 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8458717 large Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1208 7.75e-01 1.0000000 ns p = 1 0.0289540 small Random 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1244 9.70e-01 1.0000000 ns p = 1 0.0041363 small Random 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1257 9.64e-01 1.0000000 ns p = 1 0.0048257 small Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 394 0.00e+00 0.0000001 **** p &lt; 1e-04 0.5901110 large Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 482 1.00e-07 0.0000030 **** p &lt; 1e-04 0.5294454 large Tournament 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1107 3.26e-01 1.0000000 ns p = 1 0.0985816 small Tournament 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1739 7.58e-04 0.0189500 p = 0.01895 0.3371078 moderate Tournament 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1675 3.43e-03 0.0857500 ns p = 0.08575 0.2929873 small References "],["other-fitness-landscapes.html", "Chapter 3 Other fitness landscapes 3.1 Setup 3.2 Performance 3.3 Phylogenetic diversity 3.4 Phenotypic diversity 3.5 Relationship between phenotypic and phylogenetic diversity 3.6 Relationship between diversity and success 3.7 Causality analysis", " Chapter 3 Other fitness landscapes 3.1 Setup library(ggplot2) library(tidyverse) library(knitr) library(cowplot) library(viridis) library(RColorBrewer) library(rstatix) library(ggsignif) library(Hmisc) library(kableExtra) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) library(readr) library(stringr) library(ggpubr) library(infotheo) library(osfr) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-apple-darwin17.0 ## arch x86_64 ## os darwin17.0 ## system x86_64, darwin17.0 ## status ## major 4 ## minor 1.1 ## year 2021 ## month 08 ## day 10 ## svn rev 80725 ## language R ## version.string R version 4.1.1 (2021-08-10) ## nickname Kick Things # Labeler for stats annotations p_label &lt;- function(p_value) { threshold = 0.0001 if (p_value &lt; threshold) { return(paste0(&quot;p &lt; &quot;, threshold)) } else { return(paste0(&quot;p = &quot;, p_value)) } } # Significance threshold alpha &lt;- 0.05 ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) osf_retrieve_file(&quot;p79hx&quot;) %&gt;% osf_download(conflicts = &quot;skip&quot;) # Download data from osf ## # A tibble: 1 × 4 ## name id local_path meta ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;list&gt; ## 1 complex_fitness_landscapes.csv 612fe4d84e5ee5019e29292e ./complex_fit… &lt;named… data_loc &lt;- &quot;complex_fitness_landscapes.csv&quot; data &lt;- read_csv(data_loc, na=c(&quot;NONE&quot;, &quot;NA&quot;, &quot;&quot;)) data &lt;- data %&gt;% filter(N==20, generation %%10 == 0) %&gt;% mutate( selection_name = as.factor(case_when( SELECTION == 0 ~ &quot;Tournament&quot;, SELECTION == 1 ~ &quot;Fitness sharing&quot;, SELECTION == 2 ~ &quot;Lexicase&quot;, SELECTION == 3 ~ &quot;Eco-EA&quot;, SELECTION == 4 ~ &quot;Random&quot;, )), problem_name = as.factor(case_when( PROBLEM == 0 ~ &quot;NK Landscape&quot;, PROBLEM == 1 ~ &quot;Count Odds&quot;, PROBLEM == 2 ~ &quot;Real-valued optimization&quot;, PROBLEM == 3 ~ &quot;Sorting network&quot;, PROBLEM == 4 ~ &quot;Logic-9&quot; )) ) final_data &lt;- filter(data, generation==max(data$generation)) 3.2 Performance 3.2.1 Over time ggplot( data, aes( x=generation, y=max_performance, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) + facet_wrap(~problem_name, scales=&quot;free&quot;) 3.2.2 Final # Compute manual labels for geom_signif stat.test &lt;- final_data %&gt;% wilcox_test(max_performance ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) #stat.test$manual_position &lt;- stat.test$y.position * .5 #stat.test$manual_position &lt;- c(110, 150, 170, 170, 130, 110) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) ggplot( final_data, aes( x=selection_name, y=max_performance, fill=selection_name ) ) + geom_boxplot() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position=&quot;none&quot;) + facet_wrap(~problem_name, scales=&quot;free&quot;) stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label max_performance Eco-EA Fitness sharing 240 240 29310.5 7.37e-01 1.000000 ns 125237.4 Eco-EA , Fitness sharing 1 2 p = 1 max_performance Eco-EA Lexicase 240 240 23075.0 1.46e-04 0.001460 ** 178661.5 Eco-EA , Lexicase 1 3 p = 0.00146 max_performance Eco-EA Random 240 240 39696.5 0.00e+00 0.000000 **** 232085.6 Eco-EA, Random 1 4 p &lt; 1e-04 max_performance Eco-EA Tournament 240 240 29346.0 7.18e-01 1.000000 ns 285509.7 Eco-EA , Tournament 1 5 p = 1 max_performance Fitness sharing Lexicase 240 240 22328.5 2.01e-05 0.000201 *** 338933.8 Fitness sharing, Lexicase 2 3 p = 0.000201 max_performance Fitness sharing Random 240 240 41293.0 0.00e+00 0.000000 **** 392358.0 Fitness sharing, Random 2 4 p &lt; 1e-04 max_performance Fitness sharing Tournament 240 240 27500.5 3.92e-01 1.000000 ns 445782.1 Fitness sharing, Tournament 2 5 p = 1 max_performance Lexicase Random 240 240 44132.5 0.00e+00 0.000000 **** 499206.2 Lexicase, Random 3 4 p &lt; 1e-04 max_performance Lexicase Tournament 240 240 34831.5 6.61e-05 0.000661 *** 552630.3 Lexicase , Tournament 3 5 p = 0.000661 max_performance Random Tournament 240 240 18254.0 0.00e+00 0.000000 **** 606054.4 Random , Tournament 4 5 p &lt; 1e-04 3.3 Phylogenetic diversity 3.3.1 Over time ggplot( data, aes( x=generation, y=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_log10( name=&quot;Mean pairwise distance&quot; ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) + facet_wrap(~problem_name, scales = &quot;free&quot;) 3.3.2 Final # Compute manual labels for geom_signif stat.test &lt;- final_data %&gt;% wilcox_test(mean_phenotype_pairwise_distance ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) #stat.test$manual_position &lt;- stat.test$y.position * .5 #stat.test$manual_position &lt;- c(110, 150, 170, 170, 130, 110) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) ggplot( final_data, aes( x=selection_name, y=mean_phenotype_pairwise_distance, fill=selection_name ) ) + geom_boxplot() + scale_y_log10( name=&quot;Mean pairwise distance&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) + facet_wrap(~problem_name, scales = &quot;free&quot;) stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label mean_phenotype_pairwise_distance Eco-EA Fitness sharing 240 240 2831.0 0.00e+00 0.000000 **** 9718.758 Eco-EA , Fitness sharing 1 2 p &lt; 1e-04 mean_phenotype_pairwise_distance Eco-EA Lexicase 240 240 25159.0 1.70e-02 0.170000 ns 15104.178 Eco-EA , Lexicase 1 3 p = 0.17 mean_phenotype_pairwise_distance Eco-EA Random 240 240 9552.0 0.00e+00 0.000000 **** 20489.598 Eco-EA, Random 1 4 p &lt; 1e-04 mean_phenotype_pairwise_distance Eco-EA Tournament 240 240 43052.5 0.00e+00 0.000000 **** 25875.018 Eco-EA , Tournament 1 5 p &lt; 1e-04 mean_phenotype_pairwise_distance Fitness sharing Lexicase 240 240 33683.0 1.00e-03 0.010000 ** 31260.438 Fitness sharing, Lexicase 2 3 p = 0.01 mean_phenotype_pairwise_distance Fitness sharing Random 240 240 40738.0 0.00e+00 0.000000 **** 36645.858 Fitness sharing, Random 2 4 p &lt; 1e-04 mean_phenotype_pairwise_distance Fitness sharing Tournament 240 240 57314.0 0.00e+00 0.000000 **** 42031.278 Fitness sharing, Tournament 2 5 p &lt; 1e-04 mean_phenotype_pairwise_distance Lexicase Random 240 240 28272.0 8.49e-01 1.000000 ns 47416.698 Lexicase, Random 3 4 p = 1 mean_phenotype_pairwise_distance Lexicase Tournament 240 240 34801.0 7.84e-05 0.000784 *** 52802.118 Lexicase , Tournament 3 5 p = 0.000784 mean_phenotype_pairwise_distance Random Tournament 240 240 54927.0 0.00e+00 0.000000 **** 58187.538 Random , Tournament 4 5 p &lt; 1e-04 3.4 Phenotypic diversity 3.4.1 Over time ggplot( data, aes( x=generation, y=phenotype_num_taxa, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) + facet_wrap(~problem_name, scales = &quot;free&quot;) 3.4.2 Final # Compute manual labels for geom_signif stat.test &lt;- final_data %&gt;% wilcox_test(phenotype_num_taxa ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) #stat.test$manual_position &lt;- stat.test$y.position * .5 #stat.test$manual_position &lt;- c(110, 150, 170, 170, 130, 110) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) ggplot( final_data, aes( x=selection_name, y=phenotype_num_taxa, fill=selection_name ) ) + geom_boxplot() + scale_y_continuous( name=&quot;Phenotypic Richness&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) + facet_wrap(~problem_name, scales = &quot;free&quot;) stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label phenotype_num_taxa Eco-EA Fitness sharing 240 240 2406.0 0.000000 0.00000 **** 1507.000 Eco-EA , Fitness sharing 1 2 p &lt; 1e-04 phenotype_num_taxa Eco-EA Lexicase 240 240 14833.5 0.000000 0.00000 **** 2070.333 Eco-EA , Lexicase 1 3 p &lt; 1e-04 phenotype_num_taxa Eco-EA Random 240 240 34261.5 0.000326 0.00326 ** 2633.667 Eco-EA, Random 1 4 p = 0.00326 phenotype_num_taxa Eco-EA Tournament 240 240 29587.5 0.604000 1.00000 ns 3197.000 Eco-EA , Tournament 1 5 p = 1 phenotype_num_taxa Fitness sharing Lexicase 240 240 42195.5 0.000000 0.00000 **** 3760.333 Fitness sharing, Lexicase 2 3 p &lt; 1e-04 phenotype_num_taxa Fitness sharing Random 240 240 57231.0 0.000000 0.00000 **** 4323.667 Fitness sharing, Random 2 4 p &lt; 1e-04 phenotype_num_taxa Fitness sharing Tournament 240 240 51342.0 0.000000 0.00000 **** 4887.000 Fitness sharing, Tournament 2 5 p &lt; 1e-04 phenotype_num_taxa Lexicase Random 240 240 47218.0 0.000000 0.00000 **** 5450.333 Lexicase, Random 3 4 p &lt; 1e-04 phenotype_num_taxa Lexicase Tournament 240 240 43850.0 0.000000 0.00000 **** 6013.667 Lexicase , Tournament 3 5 p &lt; 1e-04 phenotype_num_taxa Random Tournament 240 240 25692.5 0.041000 0.41000 ns 6577.000 Random , Tournament 4 5 p = 0.41 3.5 Relationship between phenotypic and phylogenetic diversity ggplot( final_data, aes( y=phenotype_num_taxa, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 3.6 Relationship between diversity and success 3.6.1 Earlier in run ggplot( data %&gt;% filter(generation==500), aes( y=max_performance, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==500), aes( y=max_performance, x=phenotype_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) phylogney_vs_performance &lt;- ggplot( data %&gt;% filter(generation==1000), aes( y=max_performance, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) phylogney_vs_performance ggplot( data %&gt;% filter(generation==1000), aes( y=max_performance, x=phenotype_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 3.6.2 End of run ggplot( final_data, aes( y=max_performance, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( final_data, aes( y=max_performance, x=phenotype_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 3.7 Causality analysis res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(max_performance), discretize(lag(max_phenotype_pairwise_distance, 1)), discretize(lag(max_performance, 1))), fit_phylo_100 = condinformation(discretize(max_performance), discretize(lag(max_phenotype_pairwise_distance, 10)), discretize(lag(max_performance, 10))), fit_phylo_1000 = condinformation(discretize(max_performance), discretize(lag(max_phenotype_pairwise_distance, 100)), discretize(lag(max_performance, 100))), fit_pheno_10 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_performance, 1))), fit_pheno_100 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_performance, 10))), fit_pheno_1000 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 100)), discretize(lag(max_performance, 100))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(max_performance, 1))), fit_phylo_100 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(max_performance, 10))), fit_phylo_1000 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_pairwise_distance, 100)), discretize(lag(max_performance, 100))), fit_pheno_10 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_performance, 1))), fit_pheno_100 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_performance, 10))), fit_pheno_1000 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 100)), discretize(lag(max_performance, 100))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(max_performance, 1))), fit_phylo_100 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(max_performance, 10))), fit_phylo_1000 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(max_performance, 100))), fit_pheno_10 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_performance, 1))), fit_pheno_100 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_performance, 10))), fit_pheno_1000 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 100)), discretize(lag(max_performance, 100))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(max_performance), discretize(lag(variance_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(max_performance, 1))), fit_phylo_100 = condinformation(discretize(max_performance), discretize(lag(variance_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(max_performance, 10))), fit_phylo_1000 = condinformation(discretize(max_performance), discretize(lag(variance_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(max_performance, 100))), fit_pheno_10 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_performance, 1))), fit_pheno_100 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_performance, 10))), fit_pheno_1000 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 100)), discretize(lag(max_performance, 100))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phenotype_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 1)), discretize(lag(phenotype_num_taxa, 1))), phen_phylo_100 = condinformation(discretize(phenotype_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 10)), discretize(lag(phenotype_num_taxa, 10))), pheno_phylo_1000 = condinformation(discretize(phenotype_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 100)), discretize(lag(phenotype_num_taxa, 100))), phylo_pheno_10 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_phenotype_pairwise_distance, 1))), phylo_pheno_100 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_phenotype_pairwise_distance, 10))), phylo_pheno_1000 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phenotype_num_taxa, 100)), discretize(lag(max_phenotype_pairwise_distance, 100))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;Phenotypic -&gt; Phylogenetic&quot;, TRUE ~ &quot;Phylogenetic -&gt; Phenotypic&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phenotype_num_taxa), discretize(lag(max_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(phenotype_num_taxa, 1))), phen_phylo_100 = condinformation(discretize(phenotype_num_taxa), discretize(lag(max_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(phenotype_num_taxa, 10))), pheno_phylo_1000 = condinformation(discretize(phenotype_num_taxa), discretize(lag(max_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(phenotype_num_taxa, 100))), phylo_pheno_10 = condinformation(discretize(max_phenotype_evolutionary_distinctiveness), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_phenotype_evolutionary_distinctiveness, 1))), phylo_pheno_100 = condinformation(discretize(max_phenotype_evolutionary_distinctiveness), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_phenotype_evolutionary_distinctiveness, 10))), phylo_pheno_1000 = condinformation(discretize(max_phenotype_evolutionary_distinctiveness), discretize(lag(phenotype_num_taxa, 100)), discretize(lag(max_phenotype_evolutionary_distinctiveness, 100))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;Phenotypic -&gt; Phylogenetic&quot;, TRUE ~ &quot;Phylogenetic -&gt; Phenotypic&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
