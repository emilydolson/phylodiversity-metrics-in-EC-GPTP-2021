[["index.html", "Supplemental info about phylodiversity in evolutionary computation Chapter 1 Introduction 1.1 About our supplemental material 1.2 Contributing authors 1.3 Research overview 1.4 Reproducing our work", " Supplemental info about phylodiversity in evolutionary computation Jose Guadalupe Hernandez, Alexander Lalejini, Emily Dolson 2021-09-08 Chapter 1 Introduction This is the supplemental material for our work, ‘What can phylogenetic metrics tell us about useful diversity in evolutionary algorithms?’. This is not intended as a stand-alone document, but as a companion to our paper. 1.1 About our supplemental material As you may have noticed (unless you’re reading a pdf version of this), our supplemental material is hosted using GitHub pages. We compiled our data analyses and supplemental documentation into this nifty web-accessible book using bookdown. The source code/configuration files for this supplemental material and all experiments in the paper can be found in this GitHub repository. 1.2 Contributing authors Jose Guadalupe Hernandez Alexander Lalejini Emily Dolson 1.3 Research overview 1.3.1 Abstract It is generally accepted that “diversity” is associated with success in evolutionary algorithms. However, diversity is a broad concept that can be measured and defined in a multitude of ways. To date, most evolutionary computation research has measured diversity using the richness and/or evenness of a particular genotypic or phenotypic property. While these metrics are informative, we hypothesize that other diversity metrics are more strongly predictive of success. Phylogenetic diversity metrics are a class of metrics popularly used in biology, which take into account the evolutionary history of a population. Here, we investigate the extent to which 1) these metrics provide different information than those traditionally used in evolutionary computation, and 2) these metrics better predict the long-term success of a run of evolutionary computation. We find that, in most cases, phylogenetic metrics behave meaningfully differently from other diversity metrics. Moreover, our results suggest that phylogenetic diversity is indeed a better predictor of success. 1.3.2 Phenotypic diversity vs phylogenetic diversity. In short, phenotypic diversity measures the diversity of phenotypes in the population at any one point in time. Phylogenetic diveristy measures the diversity of evolutionary history represented in a population. We wrote a lot more about building phylogenies in the context of computational evolution in this paper. As an example, the following figure shows two different phylogenies (ancestry trees). Arrows show parent-child relationships. Each node is a taxonomically unique phenotype (i.e., a phenotype with a unique evolutionary origin). For simplicity, leaf nodes in these diagrams are assumed to be the current set of taxa in the population; in reality, there could be non-leaf nodes corresponding to extant taxa. A) A population with high phenotypic diversity (phenotypic richness = 5) and low phylogenetic diversity (mean pairwise distance = 2). B) A population with low phenotypic diversity (phenotypic richness = 2) and high phylogenetic diversity (mean pairwise distance = 6). Example of populations with different levels of phenotypic and phylogenetic diveristy 1.3.3 Research questions Is phylogenetic diversity meaningfully different from phenotypic diversity in the context of evolutionary computation? The answer to this question is important. Intuitively, we might think that since these are both types of diversity, they should correlate pretty closely. Given that phylogenetic diversity is more computationally intensive to measure, if we’re going to argue that it’s something evolutionary computation researchers should pay attention to (spoilers: we are!), we need to show that it is meaningfully different. Is phylogenetic diversity more informative about outcomes in evolutionary computation than phenotypic diversity? The importance of this question is more obvious. We know that diversity is centrally linked to the success of evolutionary algorithms. There are hints scattered across the literature that certain types of diversity are more “useful” to solving problems than others. So our goal is for this work to move us towards a better understanding of which types of diversity we should be promoting in evolutionary algorithms. 1.3.4 Study design We ran 5 selection schemes (random, tournament, fitness sharing, lexicase selection, and eco-ea) on 5 different problems (one designed to be a clean test environment, and 4 chosen to evoke the messy realities of real problems) and gathered a ludicrous amount of data. Here and in the paper, we attempt to focus very closely on getting answers to the two specific questions that we asked above (to avoid overwhelming ourselves or the reader with a firehose of data). There are many intriguing aspects of this data set that raise further questions, which we look forward to addressing in the future. 1.3.5 Results Phylogenetic diversity and phenotypic diversity behave differently to an extent that was even surprising to us. Phylogenetic diversity is more predictive of success than phenotypic diversity in the vast majority of cases. The differences are often substantial (check out our effect sizes!). 1.3.6 Caveats/areas for future research Phylogenetic diversity and phenotypic diversity are both broad classes of metrics, and there is substantial variation in how different phylogenetic diversity metrics behave in different contexts. There is clearly variation in all of this over time and by fitness landscape. 1.4 Reproducing our work 1.4.1 Data availability All data used in the paper is available via the Open Science Framework. 1.4.2 Code availability All code used in the paper is available on github. 1.4.3 Dependencies The C++ code to run these experiments requires: - Empirical - The EC Ecology toolbox 1.4.4 Compilation You can compile and run the code used in the paper as follows: # Clone Empirical git clone --recursive https://github.com/devosoft/Empirical.git # Clone EC-ecology-toolbox git clone https://github.com/emilydolson/ec_ecology_toolbox.git # Clone the repo for this project git clone --recursive https://github.com/emilydolson/phylodiversity-metrics-in-EC-GPTP-2021.git ### Complex fitness landscapes # Compile the executable to run experiments for this project make # Run an experiment. To set parameters, use command line flags # e.g. to set the selection scheme, run ./ecology_parameter_sweep -SELECTION 2 # To see all options, run ./ecology_parameter_sweep --help ./ecology_parameter_sweep ### Exploration diagnostic # all of the code for the exploration diagnostic lives in the exploration_diagnostic submodule cd exploration_diagnostic make ./dia_world # the dia_world executable can be configured in the same way as the ecology_parameter_sweep executable "],["exploration-diagnostic.html", "Chapter 2 Exploration Diagnostic 2.1 Setup 2.2 Performance 2.3 Phylogenetic diversity 2.4 Phenotypic diversity 2.5 Relationship between phenotypic and phylogenetic diversity 2.6 Relationship between diversity and success 2.7 Causality analysis", " Chapter 2 Exploration Diagnostic 2.1 Setup First, we need to do some set up to analyze our data Include dependencies library(ggplot2) # For plotting library(tidyverse) # For data wrangling library(knitr) # For making nice rmarkdown documents library(cowplot) # For theme library(viridis) # For color scale library(RColorBrewer) # For more color scales library(rstatix) library(ggsignif) # For adding pairwise significance to plots library(Hmisc) # For bootstrapping condifence internvals library(kableExtra) # For displaying nice tables source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) # For raincloud plots library(readr) # For reading in data library(stringr) # For manipulating string data library(ggpubr) # For displaying correlation statistics on plots library(infotheo) # For causality analysis library(scales) # For displaying scales nicely in facetted plots library(osfr) # For downloading the data for this project These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 0.4 ## year 2021 ## month 02 ## day 15 ## svn rev 80002 ## language R ## version.string R version 4.0.4 (2021-02-15) ## nickname Lost Library Book Setup constants to be used across plots # Labeler for stats annotations p_label &lt;- function(p_value) { threshold = 0.0001 if (p_value &lt; threshold) { return(paste0(&quot;p &lt; &quot;, threshold)) } else { return(paste0(&quot;p = &quot;, p_value)) } } # Significance threshold alpha &lt;- 0.05 # Common graph variables performance_ylim &lt;- 1 coverage_ylim &lt;- 1.0 ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) The data for this project are hosted on osf.io. The following chunk downloads them automatically if they haven’t already been downloaded. # Read in data osf_retrieve_file(&quot;esm4r&quot;) %&gt;% osf_download(conflicts = &quot;skip&quot;) # Download data from osf data_loc &lt;- &quot;final_exploration_diagnostic_data.csv&quot; data &lt;- read_csv(data_loc, na=c(&quot;NONE&quot;, &quot;NA&quot;, &quot;&quot;)) ## Clean up data columns # Make selection name column human readable data &lt;- data %&gt;% mutate(selection_name = as.factor(case_when( selection_name == &quot;EpsilonLexicase&quot; ~ &quot;Lexicase&quot;, TOUR_SIZE == 1 ~ &quot;Random&quot;, selection_name == &quot;Tournament&quot; ~ &quot;Tournament&quot;, selection_name == &quot;FitnessSharing&quot; ~ &quot;Fitness Sharing&quot;, selection_name == &quot;EcoEa&quot; ~ &quot;EcoEA&quot; ))) # Calculate performance statistics. # Elite trait avg is the avg per-site performance of the best individual data$elite_trait_avg &lt;- data$ele_agg_per / data$OBJECTIVE_CNT data$unique_start_positions_coverage &lt;- data$uni_str_pos / data$OBJECTIVE_CNT # Convert elite_trait_avg to percent of maximum possible data$elite_trait_avg &lt;- data$elite_trait_avg/data$TARGET # Grab data from just the final time point final_data &lt;- filter(data, evaluations==max(data$evaluations)) 2.2 Performance For context, it’s important to know how each selection scheme performed on the exploration diagnostic. 2.2.1 Over time First we look at the dynamics of performance over time. 2.2.1.1 Trait performance Here, we plot average trait performance (i.e. fitness) over time for each selection scheme. We log the x-axis because Eco-EA gains fitness over a very long time scale, whereas the interesting dynamics for the other selection schemes occur relatively quickly. ggplot( data, aes( x=gen, # Generations y=elite_trait_avg, # Performance color=selection_name, # Selection scheme fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + # Plot line showing mean for each selection scheme stat_summary( # Add shading around each line indicating 95% confiedence interval geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, # Set y axis title limits=c(0, performance_ylim) # Set y axis range to include all possible performance values ) + scale_x_log10( # Log x axis name=&quot;Generation&quot; # Set x axis title ) + scale_color_discrete(&quot;Selection&quot;) + # Set legend title scale_fill_discrete(&quot;Selection&quot;) # Set legend title As observed by Hernandez et al. in their original paper on the exploration diagnostic (Hernandez, Lalejini, and Ofria 2021), fitness in tournament selection initially increases quickly and then plateaus. Fitness in lexicase selection increases slightly slower but plateaus at a much higher value (nearly 100%). Fitness sharing behaves similarly to tournament selection, but maintains a slight upward trajectory (note that, because the x axis is on a log scale, this trajectory is very gradual). Eco-EA takes substantially longer to increase in fitness but ultimately surpasses fitness sharing and tournament selection. It is unclear whether it would pass lexicase selection if these runs were allowed to continue for slightly longer; they do not appear to have plateaued yet. We chose to cut them off at 500,000 generations due to resource constraints and the fact that the questions we’re asking here are not really about final fitness. 2.2.1.2 Activation position coverage Out of curiosity, we also ran the analysis of unique activation positions present in the population, used by Hernandez et. al. This analysis tells us about the diversity of start positions for the coding region represented in the population. As the set of start positions in the population tends to represent a meaningful constraint on the number of paths through the fitness landscape that are currently accessible, this is in some sense a metric of useful diversity in the population ggplot(data, aes(x=gen, y=unique_start_positions_coverage, color=selection_name, fill=selection_name)) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Activation position coverage&quot; ) + scale_x_log10( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;)+ scale_fill_discrete(&quot;Selection&quot;) We see that lexicase selection maintains by far that largest number of unique start positions, even surpassing the number maintained by random drift. This suggests that lexicase selection is actively selecting for maintaining a diversity of start positions. Tournament selection and fitness sharing perform virtually identically, with Eco-EA falling in between. 2.2.2 Final While trends over time are more informative, it can be hard to visualize the full distribution (particularly the extent of variation). Thus, we also conduct a more detailed analysis of performance at the final time point. 2.2.2.1 Trait performance First we conduct statistics to identify which selection schemes are significantly different from each other. # Compute manual labels for geom_signif stat.test &lt;- final_data %&gt;% wilcox_test(elite_trait_avg ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% # Apply Bonferroni correction for multiple comparisons add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) Then we make raincloud plots (Allen et al. 2021) of each selection scheme. elite_final_performance_fig &lt;- ggplot( final_data, aes( x=selection_name, y=elite_trait_avg, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Average trait performance&quot;, limits=c(0, performance_ylim) ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position=&quot;none&quot;) elite_final_performance_fig These observations look fairly consistent with the timeseries plots. Next, we output the results of our significance testing. stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label elite_trait_avg EcoEA Fitness Sharing 50 50 1561 3.20e-02 3.20e-01 ns 1.922000 EcoEA , Fitness Sharing 1 2 p = 0.32 elite_trait_avg EcoEA Lexicase 50 47 60 0.00e+00 0.00e+00 **** 2.946444 EcoEA , Lexicase 1 3 p &lt; 1e-04 elite_trait_avg EcoEA Random 50 50 2500 0.00e+00 0.00e+00 **** 3.970889 EcoEA , Random 1 4 p &lt; 1e-04 elite_trait_avg EcoEA Tournament 50 50 1939 2.10e-06 2.07e-05 **** 4.995333 EcoEA , Tournament 1 5 p &lt; 1e-04 elite_trait_avg Fitness Sharing Lexicase 50 47 593 2.69e-05 2.69e-04 *** 6.019778 Fitness Sharing, Lexicase 2 3 p = 0.000269 elite_trait_avg Fitness Sharing Random 50 50 2500 0.00e+00 0.00e+00 **** 7.044222 Fitness Sharing, Random 2 4 p &lt; 1e-04 elite_trait_avg Fitness Sharing Tournament 50 50 1549 4.00e-02 4.00e-01 ns 8.068667 Fitness Sharing, Tournament 2 5 p = 0.4 elite_trait_avg Lexicase Random 47 50 2350 0.00e+00 0.00e+00 **** 9.093111 Lexicase, Random 3 4 p &lt; 1e-04 elite_trait_avg Lexicase Tournament 47 50 2098 0.00e+00 0.00e+00 **** 10.117556 Lexicase , Tournament 3 5 p &lt; 1e-04 elite_trait_avg Random Tournament 50 50 10 0.00e+00 0.00e+00 **** 11.142000 Random , Tournament 4 5 p &lt; 1e-04 Fitness sharing did not perform significantly differently from Eco-EA or Tournament selection, but all other selection schemes are significantly different. 2.2.2.2 Final activation position Coverage Now we do the same analysis for final activation position coverage. First we calculate the statistics # Compute manual labels for geom_signif stat.test &lt;- final_data %&gt;% wilcox_test(unique_start_positions_coverage ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$manual_position &lt;- stat.test$y.position * 1.05 stat.test$label &lt;- mapply(p_label,stat.test$p.adj) Then we make raincloud plots unique_start_positions_coverage_final_fig &lt;- ggplot( final_data, aes( x=selection_name, y=unique_start_positions_coverage, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Activation position coverage&quot;, limits=c(0, coverage_ylim) ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme( legend.position=&quot;none&quot; ) unique_start_positions_coverage_final_fig These also look unsurprising. Lastly, we output the results of significance testing. stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax manual_position label unique_start_positions_coverage EcoEA Fitness Sharing 50 50 2392.5 0.000 0 **** 1.420000 EcoEA , Fitness Sharing 1 2 1.491000 p &lt; 1e-04 unique_start_positions_coverage EcoEA Lexicase 50 47 0.0 0.000 0 **** 2.175556 EcoEA , Lexicase 1 3 2.284333 p &lt; 1e-04 unique_start_positions_coverage EcoEA Random 50 50 339.0 0.000 0 **** 2.931111 EcoEA , Random 1 4 3.077667 p &lt; 1e-04 unique_start_positions_coverage EcoEA Tournament 50 50 2387.0 0.000 0 **** 3.686667 EcoEA , Tournament 1 5 3.871000 p &lt; 1e-04 unique_start_positions_coverage Fitness Sharing Lexicase 50 47 0.0 0.000 0 **** 4.442222 Fitness Sharing, Lexicase 2 3 4.664333 p &lt; 1e-04 unique_start_positions_coverage Fitness Sharing Random 50 50 25.0 0.000 0 **** 5.197778 Fitness Sharing, Random 2 4 5.457667 p &lt; 1e-04 unique_start_positions_coverage Fitness Sharing Tournament 50 50 1274.5 0.708 1 ns 5.953333 Fitness Sharing, Tournament 2 5 6.251000 p = 1 unique_start_positions_coverage Lexicase Random 47 50 2350.0 0.000 0 **** 6.708889 Lexicase, Random 3 4 7.044333 p &lt; 1e-04 unique_start_positions_coverage Lexicase Tournament 47 50 2350.0 0.000 0 **** 7.464444 Lexicase , Tournament 3 5 7.837667 p &lt; 1e-04 unique_start_positions_coverage Random Tournament 50 50 2475.5 0.000 0 **** 8.220000 Random , Tournament 4 5 8.631000 p &lt; 1e-04 2.3 Phylogenetic diversity Next, we analyze the behavior of phylogenetic diversity on the exploration diagnostic. 2.3.1 Relationship between different types of pylogenetic diversity First, to get a big-picture overview, we make correlation matrices of all the different phylogenetic diversity metrics: final_data %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() However, these correlations may well vary by selection scheme, and even over time within a selection scheme. Let’s take a look at some scatter plots. ggplot( data %&gt;% filter(gen==500000), aes( y=mean_phenotype_pairwise_distance, x=variance_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Mean and variance of pairwise distances appears to correlate fairly closely with each other across selection schemes. The exception to this is tournament selection, where the range of values for both of these metrics are very small and the correlation is directly inverse. This is likely being driven by there being a small number of taxa that are mostly siblings of each other. ggplot( data %&gt;% filter(gen==500000), aes( y=mean_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Maximum and mean pairwise distance also correlate pretty closely, with the exception again being tournament. These data shed further light on the previous graph as well - the maximum pariwise distance for tournament selection is always 2. ggplot( data %&gt;% filter(gen==500000), aes( y=variance_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Max and variance of pairwise distances behave similarly. And let’s check that it doesn’t look radically different early on in the run: ggplot( data %&gt;% filter(gen==5000), aes( y=mean_phenotype_pairwise_distance, x=variance_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) The correlation between these two metrics is substantially weaker for Eco-Ea and lexicase selection at the early time point. ggplot( data %&gt;% filter(gen==5000), aes( y=mean_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) This relationship is also weaker, although not as much weaker. ggplot( data %&gt;% filter(gen==5000), aes( y=variance_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Similarly, the correlation between max and variance of pariwise distances is weakend, but still robust. So the relationship between mean and variance of pairwise distances is the only one that is really weaker at the earlier time points. Understanding exactly what drives these discrepancies is a promising angle for future work, as it may shed further light on the dynamics occurring in the run. It is particularly interesting that EcoEA and Lexicase selection are the scenarios where they diverge. Similarly, the evolutionary distinctiveness metrics look largely similar to each other, but let’s spot check that too. ggplot( data %&gt;% filter(gen==500000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=variance_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) These aren’t the strongest correlations; different information is definitely being captured by each metric. However, they still correlate to a fair extent. ggplot( data %&gt;% filter(gen==500000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=max_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Again, for the most part there is a fairly high degree of correlation here. ggplot( data %&gt;% filter(gen==500000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=min_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) And here too, although it’s getting kind of weak for lexicase. And let’s check out an earlier time point ggplot( data %&gt;% filter(gen==5000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=variance_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) The relationship between min and mean evolutionary distinctiveness holds up at the earlier time point for everything except fitness sharing. ggplot( data %&gt;% filter(gen==5000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=max_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) And here, for everything except lexicase ggplot( data %&gt;% filter(gen==5000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=min_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) These are relatively weak for the most part. Looks like the evolutionary distinctiveness statistics capture more different information from each other than the pairwise distance statistics (in general the correlations are weaker, and there are more deviations from the pattern of positive correlations). However, in a lot of cases they still correlate. There is definitely more exploration to be done on what differences in these metrics imply, but for simplicity we’ll stick to one pairwise distance metric and one evolutionary distinctiveness metric. Since it’s hard to get a gestalt impression from the scatterplots, let’s take a look at the correlation matrices for each selection scheme. Note that these are at the final time point, which clearly misses some dynamics that occurr earlier. 2.3.1.1 Random final_data %&gt;% filter(selection_name==&quot;Random&quot;) %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() In random selection, all the pairwise distance metrics correlate with each other, and also more weakly with some of the evolutionary distinctiveness metrics, but not max and variance (although they correlate strongly with each other). It is somewhat surprising that the depth of the most recent common ancestor and Faith’s Phylogenetic Diveristy metric have so little correlation with the others. 2.3.1.2 Tournament final_data %&gt;% filter(selection_name==&quot;Tournament&quot;) %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() Here, all the evolutionary distinctiveness metrics coreelate strongly with each other, but the pairiwse distance metrics less so (although this is likely an artifact of the extremely low phylogenetic diversity in tournament selection) 2.3.1.3 Fitness Sharing final_data %&gt;% filter(selection_name==&quot;Fitness Sharing&quot;) %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() Here, the pairwise distance metrics correlate with each other and the evolutionary distinctivenes metrics correlated with each other. There are some correlations between pairwise distance and evolutionary distinctiveness metrics, but they’re weaker. 2.3.1.4 Lexicase selection final_data %&gt;% filter(selection_name==&quot;Lexicase&quot;) %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() Again, the pairwise distance metrics correlate with each other but not wth the volutionary distinctivness metrics. The evolutionary distinctiveness metrics sort of correlate with each other. 2.3.1.5 Eco-EA final_data %&gt;% filter(selection_name==&quot;EcoEA&quot;) %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phen_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phen_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() In Eco-EA, there is an impressively strong positive correlation among all the phylodiversity metrics. Understanding what causes Eco-EA to deviate from lexicase selection (and to a lesser extent fitness sharing) in this way would be worthy of further research. 2.3.2 Over time 2.3.2.1 Mean pairwise distance First we plot mean pairwise distance over time. We log the y axis because there is such variation in mean pairwise distance across selection schemes, and the x-axis for the same reason as before. ggplot( data, aes( x=gen, y=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_log10( name=&quot;Mean pairwise distance&quot; ) + scale_x_log10( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) Lexicase selection maintains a monotonic increase in phylogenetic diversity over the course of the entire experiment. It likely never experiences a full coalescence event (where the most-recent common ancestor changes). Eco-EA nearly keeps pace with lexicase selection until towards the end, when its phylogenetic diversity crashes. This is likely the result of selective sweeps that begin to occur as the population discovers high fitness solutions. Fitness sharing shows a slight dip at the same time that its fitness plateaus (likely also the result of a selective sweep), but phylogenetic diversity recovers afterwards, making for a relatively constant level. over time. Tournament selection, on the other hand, maintains the same (low) level of phylogenetic diversity as fitness sharing, up until the point that fitness plateaus, at which point tournament selection’s phylodiversity drops to nearly 0. Interestingly, lexicase selection and Eco-EA both maintain more phylodiversity than random selection, whereas fitness sharing and tournament selection maintain less. 2.3.2.2 Mean evolutionary distinctiveness For comparison, we make the same plot with mean evolutionary distinctiveness. ggplot( data, aes( x=gen, y=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_log10( name=&quot;Mean evolutionary distinctiveness&quot; ) + scale_x_log10( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) Interestingly, Fitness Sharing and tournament selection both start increasing in evolutionary distinctiveness only after their fitnesses have plateaued. This seems likely to be due to some sort of pathological behavior of mean evolutionary distinctiveness on small trees, but more investigation would be necessary to figure out exactly what’s going on. Trends in other selection schemes are largely similar. 2.3.3 Final Next, we perform a more in-depth analysis of phylodiversity distributions at the final time point. 2.3.3.1 Mean pairwise distance First, we test which selection schemes end up with significantly different final distributions of mean pairwise distance. # Pairwise wilcoxon teset to determine which conditions are significantly different from each other stat.test &lt;- final_data %&gt;% wilcox_test(mean_phenotype_pairwise_distance ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) # Output stats stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label mean_phenotype_pairwise_distance EcoEA Fitness Sharing 50 50 1824.0 7.70e-05 7.70e-04 *** 49488.81 EcoEA , Fitness Sharing 1 2 p = 0.00077 mean_phenotype_pairwise_distance EcoEA Lexicase 50 47 227.0 0.00e+00 0.00e+00 **** 76981.49 EcoEA , Lexicase 1 3 p &lt; 1e-04 mean_phenotype_pairwise_distance EcoEA Random 50 50 690.0 1.15e-04 1.15e-03 ** 104474.18 EcoEA , Random 1 4 p = 0.00115 mean_phenotype_pairwise_distance EcoEA Tournament 50 50 2500.0 0.00e+00 0.00e+00 **** 131966.86 EcoEA , Tournament 1 5 p &lt; 1e-04 mean_phenotype_pairwise_distance Fitness Sharing Lexicase 50 47 0.0 0.00e+00 0.00e+00 **** 159459.54 Fitness Sharing, Lexicase 2 3 p &lt; 1e-04 mean_phenotype_pairwise_distance Fitness Sharing Random 50 50 536.0 9.00e-07 8.70e-06 **** 186952.22 Fitness Sharing, Random 2 4 p &lt; 1e-04 mean_phenotype_pairwise_distance Fitness Sharing Tournament 50 50 2232.5 0.00e+00 0.00e+00 **** 214444.90 Fitness Sharing, Tournament 2 5 p &lt; 1e-04 mean_phenotype_pairwise_distance Lexicase Random 47 50 2350.0 0.00e+00 0.00e+00 **** 241937.58 Lexicase, Random 3 4 p &lt; 1e-04 mean_phenotype_pairwise_distance Lexicase Tournament 47 50 2350.0 0.00e+00 0.00e+00 **** 269430.26 Lexicase , Tournament 3 5 p &lt; 1e-04 mean_phenotype_pairwise_distance Random Tournament 50 50 2500.0 0.00e+00 0.00e+00 **** 296922.94 Random , Tournament 4 5 p &lt; 1e-04 Looks like they are all significantly different from each other. # Raincloud plot of final mean pairwise distance final_phylogeny_fig &lt;- ggplot( final_data, aes( x=selection_name, y=mean_phenotype_pairwise_distance, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_log10( name=&quot;Mean pairwise distance&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) final_phylogeny_fig This shows something interesting! Final phylogenetic diversity in Eco-EA is heavily bimodal. In later analysis, we will see that the runs with high phylogenetic diversity are the ones with lower fitness, suggesting that they have no yet experienced a selective sweep resulting from the discovery of a high-fitness solution. 2.3.3.2 Mean evolutionary distinctiveness Tests for significant differences: # Pairwise wilcoxon teset to determine which conditions are significantly different from each other stat.test &lt;- final_data %&gt;% wilcox_test(mean_phenotype_evolutionary_distinctiveness ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) # Output stats stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label mean_phenotype_evolutionary_distinctiveness EcoEA Fitness Sharing 50 50 469 1.00e-07 7.00e-07 **** 289111.7 EcoEA , Fitness Sharing 1 2 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness EcoEA Lexicase 50 47 0 0.00e+00 0.00e+00 **** 449625.8 EcoEA , Lexicase 1 3 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness EcoEA Random 50 50 711 2.05e-04 2.05e-03 ** 610140.0 EcoEA , Random 1 4 p = 0.00205 mean_phenotype_evolutionary_distinctiveness EcoEA Tournament 50 50 569 2.70e-06 2.72e-05 **** 770654.1 EcoEA , Tournament 1 5 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness Fitness Sharing Lexicase 50 47 100 0.00e+00 0.00e+00 **** 931168.2 Fitness Sharing, Lexicase 2 3 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness Fitness Sharing Random 50 50 2428 0.00e+00 0.00e+00 **** 1091682.4 Fitness Sharing, Random 2 4 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness Fitness Sharing Tournament 50 50 1614 1.20e-02 1.20e-01 ns 1252196.5 Fitness Sharing, Tournament 2 5 p = 0.12 mean_phenotype_evolutionary_distinctiveness Lexicase Random 47 50 2350 0.00e+00 0.00e+00 **** 1412710.6 Lexicase, Random 3 4 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness Lexicase Tournament 47 50 2255 0.00e+00 0.00e+00 **** 1573224.7 Lexicase , Tournament 3 5 p &lt; 1e-04 mean_phenotype_evolutionary_distinctiveness Random Tournament 50 50 173 0.00e+00 0.00e+00 **** 1733738.9 Random , Tournament 4 5 p &lt; 1e-04 Looks like everything except fitness sharing and tournament are significantly different from each other. # Raincloud plot of final mean evolutionary distinctiveness ggplot( final_data, aes( x=selection_name, y=mean_phenotype_evolutionary_distinctiveness, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_log10( name=&quot;Mean evolutionary distinctiveness&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) Again, this looks fairly similar to MPD, except that fitness sharing and tournament are higher. 2.4 Phenotypic diversity Now we analyze phenotypic (i.e. population-level) diversity. Here, we’re defining phenotypes to only include the sites that are actively contributing to fitness. So the phenotype of [1,4,2,6,5,4,3,6,7] would be [0,0,0,6,5,4,3,0,0]. Note that phylogenetic trees are also built using this conception of phenotypes. 2.4.1 Relationship between different types of phenotypic diversity First, we should assess the extent to which different metrics of phenotypic diversity are capturing different information. ggplot( data %&gt;% filter(gen==500000), aes( y=phen_diversity, x=phen_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic shannon diversity&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Looks like at the final time point they are pretty much always closely correlated, although this correlation is weaker for lexicase selection than for other selection schemes. 2.4.2 Over time Now we examine the behavior of each phenotypic diversity metric over time. 2.4.2.1 Richness ggplot( data, aes( x=gen, y=phen_num_taxa, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_log10( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) In contrast to the phylodiversity results, phenotypic richness in all selection schemes (even tournament selection) ultimately exceeds that of random selection. Eco-EA monotonically increases while lexicase selection reaches a maximum around the same time it reaches its fitness plateau. The only real similarity to the phylodiversity results is the behavior tournament selection and fitness sharing relative to each other. 2.4.2.2 Shannon diversity We also looked at phenotypic shannon diversity: ggplot( data, aes( x=gen, y=phen_diversity, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Phenotypic Shannon entropy&quot; ) + scale_x_log10( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) This is more different from the richness results than we might have expected based on the correlation at the final time point. There is a much more pronounced drop off in Shannon entropy for tournament and fitness sharing than in richness. This difference is probably driven by the fact that, after plateauing, these selection schemes are likely both at mutation-selection balance. Thus, there are very many single-mutant phenotypes with only one copy in the population. These do not contribute much to Shannon entropy or phylogenetic diversity, but it does show up in richness. We also see that, after plataeuing, lexicase selection does actually start to decrease in Shannon entropy, but slowly. Similarly, in Eco-EA, the increase in Shannon entropy towards the end is much more modest than the increase in richness. 2.4.3 Final Now we assess the final phenotypic diversity 2.4.3.1 Richness Hypothesis-testing differences between groups: # Determine which conditions are significantly diferrent from each other stat.test &lt;- final_data %&gt;% wilcox_test(phen_num_taxa ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label phen_num_taxa EcoEA Fitness Sharing 50 50 2249.0 0.00e+00 0.0e+00 **** 326 EcoEA , Fitness Sharing 1 2 p &lt; 1e-04 phen_num_taxa EcoEA Lexicase 50 47 2319.0 0.00e+00 0.0e+00 **** 456 EcoEA , Lexicase 1 3 p &lt; 1e-04 phen_num_taxa EcoEA Random 50 50 2500.0 0.00e+00 0.0e+00 **** 586 EcoEA , Random 1 4 p &lt; 1e-04 phen_num_taxa EcoEA Tournament 50 50 2378.5 0.00e+00 0.0e+00 **** 716 EcoEA , Tournament 1 5 p &lt; 1e-04 phen_num_taxa Fitness Sharing Lexicase 50 47 1428.0 6.80e-02 6.8e-01 ns 846 Fitness Sharing, Lexicase 2 3 p = 0.68 phen_num_taxa Fitness Sharing Random 50 50 1973.0 6.00e-07 6.3e-06 **** 976 Fitness Sharing, Random 2 4 p &lt; 1e-04 phen_num_taxa Fitness Sharing Tournament 50 50 1585.0 2.10e-02 2.1e-01 ns 1106 Fitness Sharing, Tournament 2 5 p = 0.21 phen_num_taxa Lexicase Random 47 50 2339.5 0.00e+00 0.0e+00 **** 1236 Lexicase, Random 3 4 p &lt; 1e-04 phen_num_taxa Lexicase Tournament 47 50 1359.0 1.85e-01 1.0e+00 ns 1366 Lexicase , Tournament 3 5 p = 1 phen_num_taxa Random Tournament 50 50 797.0 2.00e-03 2.0e-02 1496 Random , Tournament 4 5 p = 0.02 Raincloud plot: # Raincloud plot of final phenotypic diversity final_phenotypic_fig &lt;- ggplot( final_data, aes( x=selection_name, y=phen_num_taxa, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Phenotypic Richness&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) final_phenotypic_fig Nothing particularly suprising here, but we should note that, based on the over time plot, this would look a lot different if we had selected a different time point. 2.4.3.2 Shannon diversity # Determine which conditions are significantly diferrent from each other stat.test &lt;- final_data %&gt;% wilcox_test(phen_diversity~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label phen_diversity EcoEA Fitness Sharing 50 50 2478.0 0.00e+00 0.00e+00 **** 9.602 EcoEA , Fitness Sharing 1 2 p &lt; 1e-04 phen_diversity EcoEA Lexicase 50 47 1772.0 1.66e-05 1.66e-04 *** 13.012 EcoEA , Lexicase 1 3 p = 0.000166 phen_diversity EcoEA Random 50 50 2089.5 0.00e+00 1.00e-07 **** 16.422 EcoEA , Random 1 4 p &lt; 1e-04 phen_diversity EcoEA Tournament 50 50 2496.0 0.00e+00 0.00e+00 **** 19.832 EcoEA , Tournament 1 5 p &lt; 1e-04 phen_diversity Fitness Sharing Lexicase 50 47 0.0 0.00e+00 0.00e+00 **** 23.242 Fitness Sharing, Lexicase 2 3 p &lt; 1e-04 phen_diversity Fitness Sharing Random 50 50 0.0 0.00e+00 0.00e+00 **** 26.652 Fitness Sharing, Random 2 4 p &lt; 1e-04 phen_diversity Fitness Sharing Tournament 50 50 1856.0 2.99e-05 2.99e-04 *** 30.062 Fitness Sharing, Tournament 2 5 p = 0.000299 phen_diversity Lexicase Random 47 50 1714.0 1.01e-04 1.01e-03 ** 33.472 Lexicase, Random 3 4 p = 0.00101 phen_diversity Lexicase Tournament 47 50 2350.0 0.00e+00 0.00e+00 **** 36.882 Lexicase , Tournament 3 5 p &lt; 1e-04 phen_diversity Random Tournament 50 50 2500.0 0.00e+00 0.00e+00 **** 40.292 Random , Tournament 4 5 p &lt; 1e-04 Interestingly, the final shannon diversity values of different selection schemes are much more distinguishable from each other than the final richness values. # Raincloud plot of final phenotypic diversity ggplot( final_data, aes( x=selection_name, y=phen_num_taxa, fill=selection_name ) ) + geom_flat_violin( position = position_nudge(x = .2, y = 0), alpha = .8, scale=&quot;width&quot; ) + geom_point( mapping=aes(color=selection_name), position = position_jitter(width = .15), size = .5, alpha = 0.8 ) + geom_boxplot( width = .1, outlier.shape = NA, alpha = 0.5 ) + scale_y_continuous( name=&quot;Phenotypic Shannon Diversity&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) Again, we know from the time series plots that these relative relationships varied a lot over time. Eco-EA is only higher than lexicase selection at the very end. 2.5 Relationship between phenotypic and phylogenetic diversity Now, we can finally begin to address the main questions. Do phenotypic diversity and phylogenetic diversity capture different information? 2.5.1 Phenotypic richness vs. mean pairwise distance ggplot( data %&gt;% filter(gen==500000), aes( y=phen_num_taxa, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) The linear models for some of these are questionable, but the Spearman correlation coefficient should be fine because it does not require linearity. Only tournament selection is significantly different from 0. Eco-EA is even negative (although non-significant), which is probably driven by the fact that there are really two groups of runs in Eco-EA: those that have found a good solution and had their diversity crash, and those that haven’t yet. Lets take a look at how each of those groups behave (we’ll show fitness as color, just to better understand what’s happening): ggplot( data %&gt;% filter(gen==500000, selection_name == &quot;EcoEA&quot;), aes( y=phen_num_taxa, x=mean_phenotype_pairwise_distance, color = elite_trait_avg ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~mean_phenotype_pairwise_distance &gt; 100, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + scale_color_continuous(type=&quot;viridis&quot;) 2.5.2 Phenotypic richness vs. mean evolutionary distinctiveness ggplot( data %&gt;% filter(gen==500000), aes( y=phen_num_taxa, x=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_continuous( name=&quot;Mean evolutionary distinctiveness&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) These are mostly significant, but negative. That’s interesting and worthy of further exploration (but it’s a little beyond the scope of this analysis). 2.5.3 Phenotypic shannon diversity vs. mean pairwise distance ggplot( data %&gt;% filter(gen==500000), aes( y=phen_diversity, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic shannon diversity&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Again, these are mostly not significant (although fitness sharing notably now is). 2.5.4 Phenotypic shannon diversity vs. mean evolutionary distinctiveness ggplot( data %&gt;% filter(gen==500000), aes( y=phen_diversity, x=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic shannon diversity&quot; ) + scale_x_continuous( name=&quot;Mean evolutionary distinctiveness&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) Again, all significant but negative. From this we can conclude that there is substantially more overlap between the information captured by phenotypic diversity and mean evolutionary disinctiveness than between phenotypic diversity metrics and mean pairwise distance. However, thus information has wildly different implications in the two contexts. Moreover, the long term trends are still very different. Thus, we still feel confident in saying that these metrics are meaningfully different. More investigation here may be worthwhile in the future. Overall, based on these end of time analyses and qualitative comparison of the temporal graphs, we conclude that phenotypic and phylogenetic diversity are meaningfully different from each other in the context of evolutionary computation. In retrospect, this finding may seem obvious. However a lot of people tend to assume that these two classes of diversity are closely related. 2.6 Relationship between diversity and success At last, we can finally assess whether diversity leads to actually solving problems! We start out by looking at correlations between diversity success across a few different time points, although we ultimately conclude that this approach is not particularly informative. 2.6.1 Very early in run 2.6.1.1 Mean pairwise distance ggplot( data %&gt;% filter(gen==25000), aes( y=elite_trait_avg, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.1.2 Mean evolutionary distinctiveness ggplot( data %&gt;% filter(gen==25000), aes( y=elite_trait_avg, x=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean evolutionary distinctiveness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.1.3 Richness ggplot( data %&gt;% filter(gen==25000), aes( y=elite_trait_avg, x=phen_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.1.4 Shannon diversity ggplot( data %&gt;% filter(gen==25000), aes( y=elite_trait_avg, x=phen_diversity, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic Shannon diversity&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.2 Middle of run 2.6.2.1 Mean pairwise distance ggplot( data %&gt;% filter(gen==50000), aes( y=elite_trait_avg, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.2.2 Mean evolutionary distinctiveness ggplot( data %&gt;% filter(gen==50000), aes( y=elite_trait_avg, x=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean evolutionary distinctiveness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.2.3 Richness ggplot( data %&gt;% filter(gen==50000), aes( y=elite_trait_avg, x=phen_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.2.4 Shannon diversity ggplot( data %&gt;% filter(gen==50000), aes( y=elite_trait_avg, x=phen_diversity, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic Shannon diversity&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.3 End of run 2.6.3.1 Mean pairwise distance ggplot( final_data, aes( y=elite_trait_avg, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.3.2 Mean evolutionary distinctiveness ggplot( final_data, aes( y=elite_trait_avg, x=mean_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean evolutionary distinctiveness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.3.3 Richness ggplot( final_data, aes( y=elite_trait_avg, x=phen_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.6.3.4 Shannon diversity ggplot( final_data, aes( y=elite_trait_avg, x=phen_diversity, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic Shannon diversity&quot; ) + facet_wrap( ~selection_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 2.7 Causality analysis Ultimately, it’s hard to draw useful inferences either from these single time point analyses or from comparison of line plots. Due to the feedbacks between diversity and performance, there may be a time delay in when one affects the other. To analyze the drivers of this feedback loop in a more rigorous way, we turn to Transfer Entropy as a metric of Granger Causality. For a more thorough description, see the paper associated with this supplement. 2.7.1 Setup First let’s define a function we’ll use to calculate and output significance and effect size for these results: transfer_entropy_stats &lt;- function(res) { stat.test &lt;- res %&gt;% group_by(selection_name, offset) %&gt;% wilcox_test(value ~ Type) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() stat.test$label &lt;- mapply(p_label,stat.test$p.adj) # Calculate effect sizes for these differences effect_sizes &lt;- res %&gt;% group_by(selection_name, offset) %&gt;% wilcox_effsize(value ~ Type) stat.test$effsize &lt;- effect_sizes$effsize stat.test$magnitude &lt;- effect_sizes$magnitude stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box() } 2.7.2 Transfer entropy from diversity to fitness First, we calculate the information that each type of diversity gives us about future fitness. 2.7.2.1 Max pairwise distance vs. phenotypic richness We plot the differences in transfer entropy from phylogenetic diversity to fitness and from phenotypic diversity to fitness, at a range of different lags. # Calculate transfer entropy for max pairwise distance # Time points are 10 generations, so calculating lag 1 gives us lag 10 res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10 discretize(lag(max_phenotype_pairwise_distance, 1)), discretize(lag(elite_trait_avg, 1))), fit_phylo_100 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100 discretize(lag(max_phenotype_pairwise_distance, 10)), discretize(lag(elite_trait_avg, 10))), fit_phylo_1000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 1000 discretize(lag(max_phenotype_pairwise_distance, 100)), discretize(lag(elite_trait_avg, 100))), fit_phylo_10000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10000 discretize(lag(max_phenotype_pairwise_distance, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_phylo_100000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100000 discretize(lag(max_phenotype_pairwise_distance, 10000)), discretize(lag(elite_trait_avg, 10000))), fit_fit_10000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 1000)), discretize(lag(max_phenotype_pairwise_distance, 1000))), fit_fit_100000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 10000)), discretize(lag(max_phenotype_pairwise_distance, 10000))), fit_pheno_10 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10 discretize(lag(phen_num_taxa, 1)), discretize(lag(elite_trait_avg, 1))), fit_pheno_100 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100 discretize(lag(phen_num_taxa, 10)), discretize(lag(elite_trait_avg, 10))), fit_pheno_1000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 1000 discretize(lag(phen_num_taxa, 100)), discretize(lag(elite_trait_avg, 100))), fit_pheno_10000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10000 discretize(lag(phen_num_taxa, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_pheno_100000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100000 discretize(lag(phen_num_taxa, 10000)), discretize(lag(elite_trait_avg, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) # Plot transfer entropy ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) Next we calculate statistics to quantify these differences # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic Phylogenetic 50 50 463 1.00e-07 0.0000015 **** p &lt; 1e-04 0.5425436 large EcoEA 100 value Phenotypic Phylogenetic 50 50 242 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6948970 large EcoEA 1000 value Phenotypic Phylogenetic 50 50 195 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7272980 large EcoEA 10000 value Phenotypic Phylogenetic 50 50 163 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7493582 large EcoEA 100000 value Phenotypic Phylogenetic 50 50 247 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6914501 large Fitness Sharing 10 value Phenotypic Phylogenetic 50 50 699 1.48e-04 0.0037000 ** p = 0.0037 0.3798495 moderate Fitness Sharing 100 value Phenotypic Phylogenetic 50 50 739 4.33e-04 0.0108250 p = 0.010825 0.3522742 moderate Fitness Sharing 1000 value Phenotypic Phylogenetic 50 50 751 5.89e-04 0.0147250 p = 0.014725 0.3440016 moderate Fitness Sharing 10000 value Phenotypic Phylogenetic 50 50 598 7.10e-06 0.0001770 *** p = 0.000177 0.4494771 moderate Fitness Sharing 100000 value Phenotypic Phylogenetic 50 50 415 0.00e+00 0.0000002 **** p &lt; 1e-04 0.5756340 large Lexicase 10 value Phenotypic Phylogenetic 50 50 194 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7279874 large Lexicase 100 value Phenotypic Phylogenetic 50 50 183 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7355706 large Lexicase 1000 value Phenotypic Phylogenetic 50 50 36 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8369097 large Lexicase 10000 value Phenotypic Phylogenetic 50 50 1 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8610381 large Lexicase 100000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 10 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 1000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 10000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100000 value Phenotypic Phylogenetic 50 50 249 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6900714 large Tournament 10 value Phenotypic Phylogenetic 50 50 1798 1.60e-04 0.0040000 ** p = 0.004 0.3777813 moderate Tournament 100 value Phenotypic Phylogenetic 50 50 2049 0.00e+00 0.0000009 **** p &lt; 1e-04 0.5508162 large Tournament 1000 value Phenotypic Phylogenetic 50 50 2232 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6769731 large Tournament 10000 value Phenotypic Phylogenetic 50 50 2329 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7438432 large Tournament 100000 value Phenotypic Phylogenetic 50 50 1418 2.48e-01 1.0000000 ns p = 1 0.1158162 small 2.7.2.2 Mean pairwise distance vs. phenotypic richness # Calculate transfer entropy for mean pairwise distance # Time points are 10 generations, so calculating lag 1 gives us lag 10 res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10 discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(elite_trait_avg, 1))), fit_phylo_100 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100 discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(elite_trait_avg, 10))), fit_phylo_1000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 1000 discretize(lag(mean_phenotype_pairwise_distance, 100)), discretize(lag(elite_trait_avg, 100))), fit_phylo_10000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10000 discretize(lag(mean_phenotype_pairwise_distance, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_phylo_100000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100000 discretize(lag(mean_phenotype_pairwise_distance, 10000)), discretize(lag(elite_trait_avg, 10000))), fit_fit_10000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 1000)), discretize(lag(mean_phenotype_pairwise_distance, 1000))), fit_fit_100000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 10000)), discretize(lag(mean_phenotype_pairwise_distance, 10000))), fit_pheno_10 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10 discretize(lag(phen_num_taxa, 1)), discretize(lag(elite_trait_avg, 1))), fit_pheno_100 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100 discretize(lag(phen_num_taxa, 10)), discretize(lag(elite_trait_avg, 10))), fit_pheno_1000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 1000 discretize(lag(phen_num_taxa, 100)), discretize(lag(elite_trait_avg, 100))), fit_pheno_10000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10000 discretize(lag(phen_num_taxa, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_pheno_100000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100000 discretize(lag(phen_num_taxa, 10000)), discretize(lag(elite_trait_avg, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) # Plot transfer entropy ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) Mean and max pairwise distance appear to behave virtually identically. # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic Phylogenetic 50 50 292 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6604279 large EcoEA 100 value Phenotypic Phylogenetic 50 50 251 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6886926 large EcoEA 1000 value Phenotypic Phylogenetic 50 50 318 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6425040 large EcoEA 10000 value Phenotypic Phylogenetic 50 50 211 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7162679 large EcoEA 100000 value Phenotypic Phylogenetic 50 50 374 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6038986 large Fitness Sharing 10 value Phenotypic Phylogenetic 50 50 522 5.00e-07 0.0000132 **** p &lt; 1e-04 0.5018701 large Fitness Sharing 100 value Phenotypic Phylogenetic 50 50 550 1.40e-06 0.0000355 **** p &lt; 1e-04 0.4825674 moderate Fitness Sharing 1000 value Phenotypic Phylogenetic 50 50 620 1.43e-05 0.0003575 *** p = 0.0003575 0.4343107 moderate Fitness Sharing 10000 value Phenotypic Phylogenetic 50 50 464 1.00e-07 0.0000015 **** p &lt; 1e-04 0.5418542 large Fitness Sharing 100000 value Phenotypic Phylogenetic 50 50 345 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6238907 large Lexicase 10 value Phenotypic Phylogenetic 50 50 193 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7286768 large Lexicase 100 value Phenotypic Phylogenetic 50 50 222 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7086847 large Lexicase 1000 value Phenotypic Phylogenetic 50 50 336 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6300951 large Lexicase 10000 value Phenotypic Phylogenetic 50 50 137 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7672822 large Lexicase 100000 value Phenotypic Phylogenetic 50 50 140 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7652140 large Random 10 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 1000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 10000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100000 value Phenotypic Phylogenetic 50 50 504 3.00e-07 0.0000069 **** p &lt; 1e-04 0.5142790 large Tournament 10 value Phenotypic Phylogenetic 50 50 932 2.86e-02 0.7150000 ns p = 0.715 0.2192235 small Tournament 100 value Phenotypic Phylogenetic 50 50 1106 3.23e-01 1.0000000 ns p = 1 0.0992710 small Tournament 1000 value Phenotypic Phylogenetic 50 50 1209 7.80e-01 1.0000000 ns p = 1 0.0282647 small Tournament 10000 value Phenotypic Phylogenetic 50 50 1184 6.52e-01 1.0000000 ns p = 1 0.0454992 small Tournament 100000 value Phenotypic Phylogenetic 50 50 612 1.11e-05 0.0002775 *** p = 0.0002775 0.4398257 moderate 2.7.2.3 Mean pairwise distance vs. shannon entropy # Calculate transfer entropy for mean pairwise distance # Time points are 10 generations, so calculating lag 1 gives us lag 10 res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10 discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(elite_trait_avg, 1))), fit_phylo_100 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100 discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(elite_trait_avg, 10))), fit_phylo_1000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 1000 discretize(lag(mean_phenotype_pairwise_distance, 100)), discretize(lag(elite_trait_avg, 100))), fit_phylo_10000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10000 discretize(lag(mean_phenotype_pairwise_distance, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_phylo_100000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100000 discretize(lag(mean_phenotype_pairwise_distance, 10000)), discretize(lag(elite_trait_avg, 10000))), fit_fit_10000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 1000)), discretize(lag(mean_phenotype_pairwise_distance, 1000))), fit_fit_100000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 10000)), discretize(lag(mean_phenotype_pairwise_distance, 10000))), fit_pheno_10 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10 discretize(lag(phen_diversity, 1)), discretize(lag(elite_trait_avg, 1))), fit_pheno_100 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100 discretize(lag(phen_diversity, 10)), discretize(lag(elite_trait_avg, 10))), fit_pheno_1000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 1000 discretize(lag(phen_diversity, 100)), discretize(lag(elite_trait_avg, 100))), fit_pheno_10000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10000 discretize(lag(phen_diversity, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_pheno_100000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100000 discretize(lag(phen_diversity, 10000)), discretize(lag(elite_trait_avg, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) # Plot transfer entropy ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) Looks like Shannon Diversity is more predictive of fitness than phenotypic richness (at least for lexicase), although still not as much as mean pairwise distance. # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic Phylogenetic 50 50 789 1.50e-03 0.0375000 p = 0.0375 0.3178051 moderate EcoEA 100 value Phenotypic Phylogenetic 50 50 671 6.66e-05 0.0016650 ** p = 0.001665 0.3991522 moderate EcoEA 1000 value Phenotypic Phylogenetic 50 50 664 5.43e-05 0.0013575 ** p = 0.0013575 0.4039778 moderate EcoEA 10000 value Phenotypic Phylogenetic 50 50 293 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6597386 large EcoEA 100000 value Phenotypic Phylogenetic 50 50 429 0.00e+00 0.0000004 **** p &lt; 1e-04 0.5659826 large Fitness Sharing 10 value Phenotypic Phylogenetic 50 50 705 1.74e-04 0.0043500 ** p = 0.00435 0.3757132 moderate Fitness Sharing 100 value Phenotypic Phylogenetic 50 50 725 2.99e-04 0.0074750 ** p = 0.007475 0.3619255 moderate Fitness Sharing 1000 value Phenotypic Phylogenetic 50 50 782 1.27e-03 0.0317500 p = 0.03175 0.3226308 moderate Fitness Sharing 10000 value Phenotypic Phylogenetic 50 50 612 1.11e-05 0.0002775 *** p = 0.0002775 0.4398257 moderate Fitness Sharing 100000 value Phenotypic Phylogenetic 50 50 566 2.40e-06 0.0000612 **** p &lt; 1e-04 0.4715373 moderate Lexicase 10 value Phenotypic Phylogenetic 50 50 560 2.00e-06 0.0000500 **** p &lt; 1e-04 0.4756736 moderate Lexicase 100 value Phenotypic Phylogenetic 50 50 608 9.80e-06 0.0002440 *** p = 0.000244 0.4425832 moderate Lexicase 1000 value Phenotypic Phylogenetic 50 50 827 3.58e-03 0.0895000 ns p = 0.0895 0.2916086 small Lexicase 10000 value Phenotypic Phylogenetic 50 50 608 9.80e-06 0.0002440 *** p = 0.000244 0.4425832 moderate Lexicase 100000 value Phenotypic Phylogenetic 50 50 636 2.34e-05 0.0005850 *** p = 0.000585 0.4232805 moderate Random 10 value Phenotypic Phylogenetic 50 50 402 0.00e+00 0.0000001 **** p &lt; 1e-04 0.5845959 large Random 100 value Phenotypic Phylogenetic 50 50 1 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8610381 large Random 1000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 10000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100000 value Phenotypic Phylogenetic 50 50 428 0.00e+00 0.0000004 **** p &lt; 1e-04 0.5666720 large Tournament 10 value Phenotypic Phylogenetic 50 50 1244 9.70e-01 1.0000000 ns p = 1 0.0041363 small Tournament 100 value Phenotypic Phylogenetic 50 50 1220 8.39e-01 1.0000000 ns p = 1 0.0206815 small Tournament 1000 value Phenotypic Phylogenetic 50 50 1280 8.39e-01 1.0000000 ns p = 1 0.0206815 small Tournament 10000 value Phenotypic Phylogenetic 50 50 1250 1.00e+00 1.0000000 ns p = 1 0.0000000 small Tournament 100000 value Phenotypic Phylogenetic 50 50 1009 9.73e-02 1.0000000 ns p = 1 0.1661411 small 2.7.2.4 Mean evolutionary distinctiveness vs. phenotypic richness # Calculate transfer entropy for mean evolutionary distinctiveness # Time points are 10 generations, so calculating lag 1 gives us lag 10 res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(elite_trait_avg, 1))), fit_phylo_100 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(elite_trait_avg, 10))), fit_phylo_1000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 1000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(elite_trait_avg, 100))), fit_phylo_10000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_phylo_100000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000)), discretize(lag(elite_trait_avg, 10000))), fit_fit_10000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 1000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000))), fit_fit_100000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 10000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000))), fit_pheno_10 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10 discretize(lag(phen_num_taxa, 1)), discretize(lag(elite_trait_avg, 1))), fit_pheno_100 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100 discretize(lag(phen_num_taxa, 10)), discretize(lag(elite_trait_avg, 10))), fit_pheno_1000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 1000 discretize(lag(phen_num_taxa, 100)), discretize(lag(elite_trait_avg, 100))), fit_pheno_10000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10000 discretize(lag(phen_num_taxa, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_pheno_100000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100000 discretize(lag(phen_num_taxa, 10000)), discretize(lag(elite_trait_avg, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) # Plot transfer entropy ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) Interestingly, mean evolutionary distinctiveness looks fairly comparable to mean pairwise distance (although note that the y axis doesn’t go quite as far). # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic Phylogenetic 50 50 543 1.10e-06 0.0000278 **** p &lt; 1e-04 0.4873931 moderate EcoEA 100 value Phenotypic Phylogenetic 50 50 540 1.00e-06 0.0000250 **** p &lt; 1e-04 0.4894612 moderate EcoEA 1000 value Phenotypic Phylogenetic 50 50 629 1.89e-05 0.0004725 *** p = 0.0004725 0.4281062 moderate EcoEA 10000 value Phenotypic Phylogenetic 50 50 381 0.00e+00 0.0000001 **** p &lt; 1e-04 0.5990729 large EcoEA 100000 value Phenotypic Phylogenetic 50 50 462 1.00e-07 0.0000014 **** p &lt; 1e-04 0.5432330 large Fitness Sharing 10 value Phenotypic Phylogenetic 50 50 529 7.00e-07 0.0000170 **** p &lt; 1e-04 0.4970444 moderate Fitness Sharing 100 value Phenotypic Phylogenetic 50 50 553 1.60e-06 0.0000392 **** p &lt; 1e-04 0.4804992 moderate Fitness Sharing 1000 value Phenotypic Phylogenetic 50 50 428 0.00e+00 0.0000004 **** p &lt; 1e-04 0.5666720 large Fitness Sharing 10000 value Phenotypic Phylogenetic 50 50 330 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6342314 large Fitness Sharing 100000 value Phenotypic Phylogenetic 50 50 146 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7610777 large Lexicase 10 value Phenotypic Phylogenetic 50 50 237 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6983440 large Lexicase 100 value Phenotypic Phylogenetic 50 50 272 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6742156 large Lexicase 1000 value Phenotypic Phylogenetic 50 50 509 3.00e-07 0.0000083 **** p &lt; 1e-04 0.5108321 large Lexicase 10000 value Phenotypic Phylogenetic 50 50 208 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7183360 large Lexicase 100000 value Phenotypic Phylogenetic 50 50 230 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7031696 large Random 10 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 1000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 10000 value Phenotypic Phylogenetic 50 50 2 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8603487 large Random 100000 value Phenotypic Phylogenetic 50 50 965 4.98e-02 1.0000000 ns p = 1 0.1964739 small Tournament 10 value Phenotypic Phylogenetic 50 50 655 4.16e-05 0.0010400 ** p = 0.00104 0.4101823 moderate Tournament 100 value Phenotypic Phylogenetic 50 50 716 2.35e-04 0.0058750 ** p = 0.005875 0.3681300 moderate Tournament 1000 value Phenotypic Phylogenetic 50 50 736 4.00e-04 0.0100000 ** p = 0.01 0.3543423 moderate Tournament 10000 value Phenotypic Phylogenetic 50 50 187 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7328131 large Tournament 100000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large 2.7.2.5 Mean evolutionary distinctiveness vs. shannon entropy # Calculate transfer entropy for mean evolutionary distinctiveness # Time points are 10 generations, so calculating lag 1 gives us lag 10 res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(elite_trait_avg, 1))), fit_phylo_100 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(elite_trait_avg, 10))), fit_phylo_1000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 1000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(elite_trait_avg, 100))), fit_phylo_10000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 10000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_phylo_100000 = condinformation(discretize(elite_trait_avg), # TE phylo -&gt; fit, lag 100000 discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000)), discretize(lag(elite_trait_avg, 10000))), fit_fit_10000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 1000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000))), fit_fit_100000 = condinformation(discretize(elite_trait_avg), # Mutual info btwn. fit and lagged fit discretize(lag(elite_trait_avg, 10000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000))), fit_pheno_10 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10 discretize(lag(phen_diversity, 1)), discretize(lag(elite_trait_avg, 1))), fit_pheno_100 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100 discretize(lag(phen_diversity, 10)), discretize(lag(elite_trait_avg, 10))), fit_pheno_1000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 1000 discretize(lag(phen_diversity, 100)), discretize(lag(elite_trait_avg, 100))), fit_pheno_10000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 10000 discretize(lag(phen_diversity, 1000)), discretize(lag(elite_trait_avg, 1000))), fit_pheno_100000 = condinformation(discretize(elite_trait_avg), # TE pheno -&gt; fit, lag 100000 discretize(lag(phen_diversity, 10000)), discretize(lag(elite_trait_avg, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) # Plot transfer entropy ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic Phylogenetic 50 50 1386 3.50e-01 1.0000000 ns p = 1 0.0937560 small EcoEA 100 value Phenotypic Phylogenetic 50 50 1371 4.06e-01 1.0000000 ns p = 1 0.0834152 small EcoEA 1000 value Phenotypic Phylogenetic 50 50 1352 4.84e-01 1.0000000 ns p = 1 0.0703170 small EcoEA 10000 value Phenotypic Phylogenetic 50 50 517 4.00e-07 0.0000111 **** p &lt; 1e-04 0.5053170 large EcoEA 100000 value Phenotypic Phylogenetic 50 50 553 1.60e-06 0.0000392 **** p &lt; 1e-04 0.4804992 moderate Fitness Sharing 10 value Phenotypic Phylogenetic 50 50 813 2.62e-03 0.0655000 ns p = 0.0655 0.3012599 moderate Fitness Sharing 100 value Phenotypic Phylogenetic 50 50 839 4.66e-03 0.1165000 ns p = 0.1165 0.2833360 small Fitness Sharing 1000 value Phenotypic Phylogenetic 50 50 624 1.62e-05 0.0004050 *** p = 0.000405 0.4315531 moderate Fitness Sharing 10000 value Phenotypic Phylogenetic 50 50 448 0.00e+00 0.0000008 **** p &lt; 1e-04 0.5528844 large Fitness Sharing 100000 value Phenotypic Phylogenetic 50 50 390 0.00e+00 0.0000001 **** p &lt; 1e-04 0.5928685 large Lexicase 10 value Phenotypic Phylogenetic 50 50 642 2.81e-05 0.0007025 *** p = 0.0007025 0.4191442 moderate Lexicase 100 value Phenotypic Phylogenetic 50 50 693 1.25e-04 0.0031250 ** p = 0.003125 0.3839858 moderate Lexicase 1000 value Phenotypic Phylogenetic 50 50 1040 1.49e-01 1.0000000 ns p = 1 0.1447702 small Lexicase 10000 value Phenotypic Phylogenetic 50 50 764 8.17e-04 0.0204250 p = 0.020425 0.3350396 moderate Lexicase 100000 value Phenotypic Phylogenetic 50 50 715 2.29e-04 0.0057250 ** p = 0.005725 0.3688194 moderate Random 10 value Phenotypic Phylogenetic 50 50 721 2.69e-04 0.0067250 ** p = 0.006725 0.3646831 moderate Random 100 value Phenotypic Phylogenetic 50 50 278 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6700793 large Random 1000 value Phenotypic Phylogenetic 50 50 89 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8003725 large Random 10000 value Phenotypic Phylogenetic 50 50 152 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7569414 large Random 100000 value Phenotypic Phylogenetic 50 50 881 1.11e-02 0.2775000 ns p = 0.2775 0.2543820 small Tournament 10 value Phenotypic Phylogenetic 50 50 1014 1.04e-01 1.0000000 ns p = 1 0.1626941 small Tournament 100 value Phenotypic Phylogenetic 50 50 861 7.40e-03 0.1850000 ns p = 0.185 0.2681696 small Tournament 1000 value Phenotypic Phylogenetic 50 50 774 1.05e-03 0.0262500 p = 0.02625 0.3281458 moderate Tournament 10000 value Phenotypic Phylogenetic 50 50 211 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7162679 large Tournament 100000 value Phenotypic Phylogenetic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large 2.7.3 Transfer entropy between types of diversity While we’re calculating transfer entropy, we might as well also calculate it between phenotypic diversity and phylogenetic diversity, as these could potentially also be in a feedback loop. 2.7.3.1 Max pairwise distance and phenotypic richness res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phen_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 1)), discretize(lag(phen_num_taxa, 1))), phen_phylo_100 = condinformation(discretize(phen_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 10)), discretize(lag(phen_num_taxa, 10))), pheno_phylo_1000 = condinformation(discretize(phen_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 100)), discretize(lag(phen_num_taxa, 100))), pheno_phylo_10000 = condinformation(discretize(phen_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 1000)), discretize(lag(phen_num_taxa, 1000))), pheno_phylo_100000 = condinformation(discretize(phen_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 10000)), discretize(lag(phen_num_taxa, 10000))), phylo_pheno_10 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 1)), discretize(lag(max_phenotype_pairwise_distance, 1))), phylo_pheno_100 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 10)), discretize(lag(max_phenotype_pairwise_distance, 10))), phylo_pheno_1000 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 100)), discretize(lag(max_phenotype_pairwise_distance, 100))), phylo_pheno_10000 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 1000)), discretize(lag(max_phenotype_pairwise_distance, 1000))), phylo_pheno_100000 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 10000)), discretize(lag(max_phenotype_pairwise_distance, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 23 0.00e+00 0.000000 **** p &lt; 1e-04 0.8458717 large EcoEA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 36 0.00e+00 0.000000 **** p &lt; 1e-04 0.8369097 large EcoEA 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 29 0.00e+00 0.000000 **** p &lt; 1e-04 0.8417354 large EcoEA 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 36 0.00e+00 0.000000 **** p &lt; 1e-04 0.8369097 large EcoEA 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 59 0.00e+00 0.000000 **** p &lt; 1e-04 0.8210539 large Fitness Sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 745 5.05e-04 0.012625 p = 0.012625 0.3481379 moderate Fitness Sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 747 5.32e-04 0.013300 p = 0.0133 0.3467591 moderate Fitness Sharing 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 645 3.08e-05 0.000770 *** p = 0.00077 0.4170761 moderate Fitness Sharing 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 700 1.52e-04 0.003800 ** p = 0.0038 0.3791601 moderate Fitness Sharing 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 722 2.76e-04 0.006900 ** p = 0.0069 0.3639937 moderate Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Lexicase 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Lexicase 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 17 0.00e+00 0.000000 **** p &lt; 1e-04 0.8500080 large Random 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2470 0.00e+00 0.000000 **** p &lt; 1e-04 0.8410460 large Random 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2487 0.00e+00 0.000000 **** p &lt; 1e-04 0.8527655 large Random 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1715 1.36e-03 0.034000 p = 0.034 0.3205626 moderate Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 173 0.00e+00 0.000000 **** p &lt; 1e-04 0.7424644 large Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 53 0.00e+00 0.000000 **** p &lt; 1e-04 0.8251902 large Tournament 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 70 0.00e+00 0.000000 **** p &lt; 1e-04 0.8134707 large Tournament 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 53 0.00e+00 0.000000 **** p &lt; 1e-04 0.8251902 large Tournament 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 107 0.00e+00 0.000000 **** p &lt; 1e-04 0.7879636 large 2.7.3.2 Mean pairwise distance and phenotypic richness res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phen_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(phen_num_taxa, 1))), phen_phylo_100 = condinformation(discretize(phen_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(phen_num_taxa, 10))), pheno_phylo_1000 = condinformation(discretize(phen_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 100)), discretize(lag(phen_num_taxa, 100))), pheno_phylo_10000 = condinformation(discretize(phen_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 1000)), discretize(lag(phen_num_taxa, 1000))), pheno_phylo_100000 = condinformation(discretize(phen_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 10000)), discretize(lag(phen_num_taxa, 10000))), phylo_pheno_10 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 1)), discretize(lag(mean_phenotype_pairwise_distance, 1))), phylo_pheno_100 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 10)), discretize(lag(mean_phenotype_pairwise_distance, 10))), phylo_pheno_1000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 100)), discretize(lag(mean_phenotype_pairwise_distance, 100))), phylo_pheno_10000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 1000)), discretize(lag(mean_phenotype_pairwise_distance, 1000))), phylo_pheno_100000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_num_taxa, 10000)), discretize(lag(mean_phenotype_pairwise_distance, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) Here, on the other hand, there’s a pretty notable difference between mean and max pairwise distance. Looks like max pairwise distance is in general more predictive of phenotypic richness than mean pairwise distance is (for fitness sharing, mean richness even has a high transfer entropy to MPD than the other way around). # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 344 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6245801 large EcoEA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 486 1.00e-07 0.0000035 **** p &lt; 1e-04 0.5266878 large EcoEA 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 667 5.93e-05 0.0014825 ** p = 0.0014825 0.4019097 moderate EcoEA 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 701 1.56e-04 0.0039000 ** p = 0.0039 0.3784707 moderate EcoEA 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 731 3.51e-04 0.0087750 ** p = 0.008775 0.3577893 moderate Fitness Sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1604 1.48e-02 0.3700000 ns p = 0.37 0.2440412 small Fitness Sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1653 5.52e-03 0.1380000 ns p = 0.138 0.2778209 small Fitness Sharing 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1384 3.57e-01 1.0000000 ns p = 1 0.0923772 small Fitness Sharing 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1744 6.69e-04 0.0167250 p = 0.016725 0.3405547 moderate Fitness Sharing 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1567 2.91e-02 0.7275000 ns p = 0.7275 0.2185341 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 229 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7038590 large Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8603487 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1806 1.28e-04 0.0032000 ** p = 0.0032 0.3832964 moderate Random 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2493 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8569018 large Random 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2499 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8610381 large Random 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1683 2.87e-03 0.0717500 ns p = 0.07175 0.2985024 small Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1297 7.49e-01 1.0000000 ns p = 1 0.0324010 small Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1309 6.87e-01 1.0000000 ns p = 1 0.0406735 small Tournament 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1298 7.43e-01 1.0000000 ns p = 1 0.0330903 small Tournament 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1295 7.59e-01 1.0000000 ns p = 1 0.0310222 small Tournament 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1277 8.55e-01 1.0000000 ns p = 1 0.0186133 small 2.7.3.3 Mean pairwise distance and shannon diversity res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phen_diversity), discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(phen_diversity, 1))), phen_phylo_100 = condinformation(discretize(phen_diversity), discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(phen_diversity, 10))), pheno_phylo_1000 = condinformation(discretize(phen_diversity), discretize(lag(mean_phenotype_pairwise_distance, 100)), discretize(lag(phen_diversity, 100))), pheno_phylo_10000 = condinformation(discretize(phen_diversity), discretize(lag(mean_phenotype_pairwise_distance, 1000)), discretize(lag(phen_diversity, 1000))), pheno_phylo_100000 = condinformation(discretize(phen_diversity), discretize(lag(mean_phenotype_pairwise_distance, 10000)), discretize(lag(phen_diversity, 10000))), phylo_pheno_10 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_diversity, 1)), discretize(lag(mean_phenotype_pairwise_distance, 1))), phylo_pheno_100 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_diversity, 10)), discretize(lag(mean_phenotype_pairwise_distance, 10))), phylo_pheno_1000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_diversity, 100)), discretize(lag(mean_phenotype_pairwise_distance, 100))), phylo_pheno_10000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_diversity, 1000)), discretize(lag(mean_phenotype_pairwise_distance, 1000))), phylo_pheno_100000 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phen_diversity, 10000)), discretize(lag(mean_phenotype_pairwise_distance, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 99 0.00000 0.0000000 **** p &lt; 1e-04 0.7934787 large EcoEA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 175 0.00000 0.0000000 **** p &lt; 1e-04 0.7410856 large EcoEA 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 89 0.00000 0.0000000 **** p &lt; 1e-04 0.8003725 large EcoEA 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 96 0.00000 0.0000000 **** p &lt; 1e-04 0.7955468 large EcoEA 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 435 0.00000 0.0000005 **** p &lt; 1e-04 0.5618463 large Fitness Sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 878 0.01040 0.2600000 ns p = 0.26 0.2564501 small Fitness Sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 909 0.01890 0.4725000 ns p = 0.4725 0.2350793 small Fitness Sharing 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 850 0.00589 0.1472500 ns p = 0.14725 0.2757528 small Fitness Sharing 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 998 0.08300 1.0000000 ns p = 1 0.1737243 small Fitness Sharing 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1250 1.00000 1.0000000 ns p = 1 0.0000000 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 6 0.00000 0.0000000 **** p &lt; 1e-04 0.8575912 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 9 0.00000 0.0000000 **** p &lt; 1e-04 0.8555230 large Lexicase 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 36 0.00000 0.0000000 **** p &lt; 1e-04 0.8369097 large Lexicase 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 29 0.00000 0.0000000 **** p &lt; 1e-04 0.8417354 large Lexicase 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 172 0.00000 0.0000000 **** p &lt; 1e-04 0.7431538 large Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00000 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00000 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 913 0.02040 0.5100000 ns p = 0.51 0.2323217 small Random 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1541 0.04520 1.0000000 ns p = 1 0.2006102 small Random 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1298 0.74300 1.0000000 ns p = 1 0.0330903 small Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1235 0.92000 1.0000000 ns p = 1 0.0103407 small Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1264 0.92600 1.0000000 ns p = 1 0.0096513 small Tournament 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1260 0.94800 1.0000000 ns p = 1 0.0068938 small Tournament 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1227 0.87700 1.0000000 ns p = 1 0.0158558 small Tournament 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1235 0.92000 1.0000000 ns p = 1 0.0103407 small 2.7.3.4 Mean evolutionary distinctiveness and phenotypic richness res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( phen_phylo_10 = condinformation( discretize(phen_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(phen_num_taxa, 1))), phen_phylo_100 = condinformation( discretize(phen_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(phen_num_taxa, 10))), pheno_phylo_1000 = condinformation( discretize(phen_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(phen_num_taxa, 100))), pheno_phylo_10000 = condinformation( discretize(phen_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000)), discretize(lag(phen_num_taxa, 1000))), pheno_phylo_100000 = condinformation( discretize(phen_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000)), discretize(lag(phen_num_taxa, 10000))), phylo_pheno_10 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_num_taxa, 1)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1))), phylo_pheno_100 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_num_taxa, 10)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10))), phylo_pheno_1000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_num_taxa, 100)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100))), phylo_pheno_10000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_num_taxa, 1000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000))), phylo_pheno_100000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_num_taxa, 10000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 25 0.000000 0.0000000 **** p &lt; 1e-04 0.8444929 large EcoEA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 97 0.000000 0.0000000 **** p &lt; 1e-04 0.7948574 large EcoEA 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 172 0.000000 0.0000000 **** p &lt; 1e-04 0.7431538 large EcoEA 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 199 0.000000 0.0000000 **** p &lt; 1e-04 0.7245405 large EcoEA 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 448 0.000000 0.0000008 **** p &lt; 1e-04 0.5528844 large Fitness Sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 817 0.002870 0.0717500 ns p = 0.07175 0.2985024 small Fitness Sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 947 0.037000 0.9250000 ns p = 0.925 0.2088827 small Fitness Sharing 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1321 0.627000 1.0000000 ns p = 1 0.0489461 small Fitness Sharing 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1814 0.000102 0.0025500 ** p = 0.00255 0.3888114 moderate Fitness Sharing 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1606 0.014300 0.3575000 ns p = 0.3575 0.2454200 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.000000 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.000000 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.000000 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.000000 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 13 0.000000 0.0000000 **** p &lt; 1e-04 0.8527655 large Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1173 0.598000 1.0000000 ns p = 1 0.0530824 small Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2473 0.000000 0.0000000 **** p &lt; 1e-04 0.8431142 large Random 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2498 0.000000 0.0000000 **** p &lt; 1e-04 0.8603487 large Random 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 2478 0.000000 0.0000000 **** p &lt; 1e-04 0.8465611 large Random 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1620 0.010900 0.2725000 ns p = 0.2725 0.2550713 small Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 358 0.000000 0.0000000 **** p &lt; 1e-04 0.6149287 large Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 453 0.000000 0.0000010 **** p &lt; 1e-04 0.5494374 large Tournament 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1158 0.528000 1.0000000 ns p = 1 0.0634231 small Tournament 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1857 0.000029 0.0007250 *** p = 0.000725 0.4184549 moderate Tournament 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1760 0.000444 0.0111000 p = 0.0111 0.3515848 moderate 2.7.3.5 Mean evolutionary distinctiveness and shannon diversity res &lt;- data %&gt;% group_by(directory, selection_name) %&gt;% summarise( phen_phylo_10 = condinformation( discretize(phen_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(phen_diversity, 1))), phen_phylo_100 = condinformation( discretize(phen_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(phen_diversity, 10))), pheno_phylo_1000 = condinformation( discretize(phen_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100)), discretize(lag(phen_diversity, 100))), pheno_phylo_10000 = condinformation( discretize(phen_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000)), discretize(lag(phen_diversity, 1000))), pheno_phylo_100000 = condinformation( discretize(phen_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000)), discretize(lag(phen_diversity, 10000))), phylo_pheno_10 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_diversity, 1)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1))), phylo_pheno_100 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_diversity, 10)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10))), phylo_pheno_1000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_diversity, 100)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 100))), phylo_pheno_10000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_diversity, 1000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1000))), phylo_pheno_100000 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phen_diversity, 10000)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10000))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name) + scale_x_discrete(&quot;Lag&quot;,labels=c(&quot;10&quot;,&quot;&quot;,&quot;1000&quot;,&quot;&quot;,&quot;100000&quot;)) + scale_y_continuous(&quot;Transfer Entropy&quot;) + theme(legend.position = c(1, 0), legend.justification = c(1, 0)) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude EcoEA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large EcoEA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large EcoEA 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 5 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8582806 large EcoEA 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 4 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8589700 large EcoEA 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 191 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7300555 large Fitness Sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 772 9.95e-04 0.0248750 p = 0.024875 0.3295246 moderate Fitness Sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 770 9.48e-04 0.0237000 p = 0.0237 0.3309034 moderate Fitness Sharing 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 796 1.77e-03 0.0442500 p = 0.04425 0.3129794 moderate Fitness Sharing 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1020 1.14e-01 1.0000000 ns p = 1 0.1585579 small Fitness Sharing 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1274 8.71e-01 1.0000000 ns p = 1 0.0165452 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Lexicase 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 8 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8562124 large Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8617275 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8610381 large Random 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1278 8.50e-01 1.0000000 ns p = 1 0.0193027 small Random 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1246 9.81e-01 1.0000000 ns p = 1 0.0027575 small Random 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1260 9.48e-01 1.0000000 ns p = 1 0.0068938 small Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 395 0.00e+00 0.0000001 **** p &lt; 1e-04 0.5894216 large Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 483 1.00e-07 0.0000032 **** p &lt; 1e-04 0.5287560 large Tournament 1000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1114 3.50e-01 1.0000000 ns p = 1 0.0937560 small Tournament 10000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1756 4.92e-04 0.0123000 p = 0.0123 0.3488273 moderate Tournament 100000 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 50 50 1685 2.74e-03 0.0685000 ns p = 0.0685 0.2998812 small References "],["other-fitness-landscapes.html", "Chapter 3 Other fitness landscapes 3.1 Setup 3.2 Performance 3.3 Phylogenetic diversity 3.4 Phenotypic diversity 3.5 Relationship between phenotypic and phylogenetic diversity 3.6 Relationship between diversity and success 3.7 Causality analysis", " Chapter 3 Other fitness landscapes 3.1 Setup library(ggplot2) library(tidyverse) library(knitr) library(cowplot) library(viridis) library(RColorBrewer) library(rstatix) library(ggsignif) library(Hmisc) library(kableExtra) source(&quot;https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R&quot;) library(readr) library(stringr) library(ggpubr) library(infotheo) library(osfr) library(scales) These analyses were conducted in the following computing environment: print(version) ## _ ## platform x86_64-pc-linux-gnu ## arch x86_64 ## os linux-gnu ## system x86_64, linux-gnu ## status ## major 4 ## minor 0.4 ## year 2021 ## month 02 ## day 15 ## svn rev 80002 ## language R ## version.string R version 4.0.4 (2021-02-15) ## nickname Lost Library Book # Labeler for stats annotations p_label &lt;- function(p_value) { threshold = 0.0001 if (p_value &lt; threshold) { return(paste0(&quot;p &lt; &quot;, threshold)) } else { return(paste0(&quot;p = &quot;, p_value)) } } # Significance threshold alpha &lt;- 0.05 ####### misc ####### # Configure our default graphing theme theme_set(theme_cowplot()) osf_retrieve_file(&quot;p79hx&quot;) %&gt;% osf_download(conflicts = &quot;skip&quot;) # Download data from osf ## # A tibble: 1 x 4 ## name id local_path meta ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;list&gt; ## 1 complex_fitness_lands… 612fe4d84e5ee501… ./complex_fitness_lands… &lt;named list… data_loc &lt;- &quot;complex_fitness_landscapes.csv&quot; data &lt;- read_csv(data_loc, na=c(&quot;NONE&quot;, &quot;NA&quot;, &quot;&quot;)) data &lt;- data %&gt;% filter(N==20, generation %%10 == 0) %&gt;% mutate( selection_name = as.factor(case_when( SELECTION == 0 ~ &quot;Tournament&quot;, SELECTION == 1 ~ &quot;Fitness sharing&quot;, SELECTION == 2 ~ &quot;Lexicase&quot;, SELECTION == 3 ~ &quot;Eco-EA&quot;, SELECTION == 4 ~ &quot;Random&quot;, )), problem_name = as.factor(case_when( PROBLEM == 0 ~ &quot;NK Landscape&quot;, PROBLEM == 1 ~ &quot;Count Odds&quot;, PROBLEM == 2 ~ &quot;Real-valued optimization&quot;, PROBLEM == 3 ~ &quot;Sorting network&quot;, PROBLEM == 4 ~ &quot;Logic-9&quot; )) ) data &lt;- filter(data, generation &lt;= 2000) final_data &lt;- filter(data, generation==max(data$generation)) 3.2 Performance 3.2.1 Over time ggplot( data, aes( x=generation, y=max_performance, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) + facet_wrap(~problem_name, scales=&quot;free&quot;) 3.2.2 Final # Compute manual labels for geom_signif stat.test &lt;- final_data %&gt;% wilcox_test(max_performance ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) #stat.test$manual_position &lt;- stat.test$y.position * .5 #stat.test$manual_position &lt;- c(110, 150, 170, 170, 130, 110) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) ggplot( final_data, aes( x=selection_name, y=max_performance, fill=selection_name ) ) + geom_boxplot() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position=&quot;none&quot;) + facet_wrap(~problem_name, scales=&quot;free&quot;) stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label max_performance Eco-EA Fitness sharing 240 240 29310.5 7.37e-01 1.000000 ns 125237.4 Eco-EA , Fitness sharing 1 2 p = 1 max_performance Eco-EA Lexicase 240 240 23075.0 1.46e-04 0.001460 ** 178661.5 Eco-EA , Lexicase 1 3 p = 0.00146 max_performance Eco-EA Random 240 240 39696.5 0.00e+00 0.000000 **** 232085.6 Eco-EA, Random 1 4 p &lt; 1e-04 max_performance Eco-EA Tournament 240 240 29346.0 7.18e-01 1.000000 ns 285509.7 Eco-EA , Tournament 1 5 p = 1 max_performance Fitness sharing Lexicase 240 240 22328.5 2.01e-05 0.000201 *** 338933.8 Fitness sharing, Lexicase 2 3 p = 0.000201 max_performance Fitness sharing Random 240 240 41293.0 0.00e+00 0.000000 **** 392358.0 Fitness sharing, Random 2 4 p &lt; 1e-04 max_performance Fitness sharing Tournament 240 240 27500.5 3.92e-01 1.000000 ns 445782.1 Fitness sharing, Tournament 2 5 p = 1 max_performance Lexicase Random 240 240 44132.5 0.00e+00 0.000000 **** 499206.2 Lexicase, Random 3 4 p &lt; 1e-04 max_performance Lexicase Tournament 240 240 34831.5 6.61e-05 0.000661 *** 552630.3 Lexicase , Tournament 3 5 p = 0.000661 max_performance Random Tournament 240 240 18254.0 0.00e+00 0.000000 **** 606054.4 Random , Tournament 4 5 p &lt; 1e-04 3.3 Phylogenetic diversity 3.3.1 Relationship between different types of pylogenetic diversity First, to get a big-picture overview, we make correlation matrices of all the different phylogenetic diversity metrics: final_data %&gt;% transmute(MinPD=min_phenotype_pairwise_distance, MeanPD=mean_phenotype_pairwise_distance, MaxPD=max_phenotype_pairwise_distance, VarPD=variance_phenotype_pairwise_distance, MinED = min_phenotype_evolutionary_distinctiveness, MeanED= mean_phenotype_evolutionary_distinctiveness, MaxED=max_phenotype_evolutionary_distinctiveness, VarED=variance_phenotype_evolutionary_distinctiveness, PD=phenotype_current_phylogenetic_diversity, # See Faith 1992 MRCA=phenotype_mrca_depth, # Phylogenetic depth of most recent common ancestor N=phenotype_num_taxa # Number of taxonomically-distinct phenotypes ) %&gt;% cor_mat() %&gt;% pull_lower_triangle() %&gt;% cor_plot() However, these correlations may well vary by selection scheme and by problem, and even over time within a selection scheme and problem. Let’s take a look at some scatter plots. ggplot( data %&gt;% filter(generation==1000), aes( y=mean_phenotype_pairwise_distance, x=variance_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==1000), aes( y=mean_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==1000), aes( y=variance_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==500), aes( y=mean_phenotype_pairwise_distance, x=variance_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==500), aes( y=mean_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==1000), aes( y=variance_phenotype_pairwise_distance, x=max_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==1000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=variance_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==1000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=max_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==1000), aes( y=mean_phenotype_evolutionary_distinctiveness, x=min_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==500), aes( y=mean_phenotype_evolutionary_distinctiveness, x=variance_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==500), aes( y=mean_phenotype_evolutionary_distinctiveness, x=max_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==500), aes( y=mean_phenotype_evolutionary_distinctiveness, x=min_phenotype_evolutionary_distinctiveness, color=selection_name, fill=selection_name ) ) + geom_point() + scale_x_continuous( breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 3.3.2 Over time ggplot( data, aes( x=generation, y=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_log10( name=&quot;Mean pairwise distance&quot; ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) + facet_wrap(~problem_name, scales = &quot;free&quot;) 3.3.3 Final # Compute manual labels for geom_signif stat.test &lt;- final_data %&gt;% wilcox_test(mean_phenotype_pairwise_distance ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) #stat.test$manual_position &lt;- stat.test$y.position * .5 #stat.test$manual_position &lt;- c(110, 150, 170, 170, 130, 110) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) ggplot( final_data, aes( x=selection_name, y=mean_phenotype_pairwise_distance, fill=selection_name ) ) + geom_boxplot() + scale_y_log10( name=&quot;Mean pairwise distance&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) + facet_wrap(~problem_name, scales = &quot;free&quot;) stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label mean_phenotype_pairwise_distance Eco-EA Fitness sharing 240 240 2831.0 0.00e+00 0.000000 **** 9718.758 Eco-EA , Fitness sharing 1 2 p &lt; 1e-04 mean_phenotype_pairwise_distance Eco-EA Lexicase 240 240 25159.0 1.70e-02 0.170000 ns 15104.178 Eco-EA , Lexicase 1 3 p = 0.17 mean_phenotype_pairwise_distance Eco-EA Random 240 240 9552.0 0.00e+00 0.000000 **** 20489.598 Eco-EA, Random 1 4 p &lt; 1e-04 mean_phenotype_pairwise_distance Eco-EA Tournament 240 240 43052.5 0.00e+00 0.000000 **** 25875.018 Eco-EA , Tournament 1 5 p &lt; 1e-04 mean_phenotype_pairwise_distance Fitness sharing Lexicase 240 240 33683.0 1.00e-03 0.010000 ** 31260.438 Fitness sharing, Lexicase 2 3 p = 0.01 mean_phenotype_pairwise_distance Fitness sharing Random 240 240 40738.0 0.00e+00 0.000000 **** 36645.858 Fitness sharing, Random 2 4 p &lt; 1e-04 mean_phenotype_pairwise_distance Fitness sharing Tournament 240 240 57314.0 0.00e+00 0.000000 **** 42031.278 Fitness sharing, Tournament 2 5 p &lt; 1e-04 mean_phenotype_pairwise_distance Lexicase Random 240 240 28272.0 8.49e-01 1.000000 ns 47416.698 Lexicase, Random 3 4 p = 1 mean_phenotype_pairwise_distance Lexicase Tournament 240 240 34801.0 7.84e-05 0.000784 *** 52802.118 Lexicase , Tournament 3 5 p = 0.000784 mean_phenotype_pairwise_distance Random Tournament 240 240 54927.0 0.00e+00 0.000000 **** 58187.538 Random , Tournament 4 5 p &lt; 1e-04 3.4 Phenotypic diversity 3.4.1 Relationship between different types of phenotypic diversity First, we should assess the extent to which different metrics of phenotypic diversity are capturing different information. ggplot( data %&gt;% filter(generation==1000), aes( y=phenotype_diversity, x=phenotype_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic shannon diversity&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot;, breaks = breaks_extended(4) ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 3.4.2 Over time ggplot( data, aes( x=generation, y=phenotype_num_taxa, color=selection_name, fill=selection_name ) ) + stat_summary(geom=&quot;line&quot;, fun=mean) + stat_summary( geom=&quot;ribbon&quot;, fun.data=&quot;mean_cl_boot&quot;, fun.args=list(conf.int=0.95), alpha=0.2, linetype=0 ) + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_continuous( name=&quot;Generation&quot; ) + scale_color_discrete(&quot;Selection&quot;) + scale_fill_discrete(&quot;Selection&quot;) + facet_wrap(~problem_name, scales = &quot;free&quot;) 3.4.3 Final # Compute manual labels for geom_signif stat.test &lt;- final_data %&gt;% wilcox_test(phenotype_num_taxa ~ selection_name) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() %&gt;% add_xy_position(x=&quot;selection_name&quot;,step.increase=1) #stat.test$manual_position &lt;- stat.test$y.position * .5 #stat.test$manual_position &lt;- c(110, 150, 170, 170, 130, 110) stat.test$label &lt;- mapply(p_label,stat.test$p.adj) ggplot( final_data, aes( x=selection_name, y=phenotype_num_taxa, fill=selection_name ) ) + geom_boxplot() + scale_y_continuous( name=&quot;Phenotypic Richness&quot; ) + scale_x_discrete( name=&quot;Selection&quot; ) + scale_fill_discrete( name=&quot;Selection&quot; ) + scale_color_discrete( name=&quot;Selection&quot; ) + theme(legend.position = &quot;none&quot;) + facet_wrap(~problem_name, scales = &quot;free&quot;) stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box(width=&quot;600px&quot;) .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif y.position groups xmin xmax label phenotype_num_taxa Eco-EA Fitness sharing 240 240 2406.0 0.000000 0.00000 **** 1507.000 Eco-EA , Fitness sharing 1 2 p &lt; 1e-04 phenotype_num_taxa Eco-EA Lexicase 240 240 14833.5 0.000000 0.00000 **** 2070.333 Eco-EA , Lexicase 1 3 p &lt; 1e-04 phenotype_num_taxa Eco-EA Random 240 240 34261.5 0.000326 0.00326 ** 2633.667 Eco-EA, Random 1 4 p = 0.00326 phenotype_num_taxa Eco-EA Tournament 240 240 29587.5 0.604000 1.00000 ns 3197.000 Eco-EA , Tournament 1 5 p = 1 phenotype_num_taxa Fitness sharing Lexicase 240 240 42195.5 0.000000 0.00000 **** 3760.333 Fitness sharing, Lexicase 2 3 p &lt; 1e-04 phenotype_num_taxa Fitness sharing Random 240 240 57231.0 0.000000 0.00000 **** 4323.667 Fitness sharing, Random 2 4 p &lt; 1e-04 phenotype_num_taxa Fitness sharing Tournament 240 240 51342.0 0.000000 0.00000 **** 4887.000 Fitness sharing, Tournament 2 5 p &lt; 1e-04 phenotype_num_taxa Lexicase Random 240 240 47218.0 0.000000 0.00000 **** 5450.333 Lexicase, Random 3 4 p &lt; 1e-04 phenotype_num_taxa Lexicase Tournament 240 240 43850.0 0.000000 0.00000 **** 6013.667 Lexicase , Tournament 3 5 p &lt; 1e-04 phenotype_num_taxa Random Tournament 240 240 25692.5 0.041000 0.41000 ns 6577.000 Random , Tournament 4 5 p = 0.41 3.5 Relationship between phenotypic and phylogenetic diversity ggplot( final_data, aes( y=phenotype_num_taxa, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Phenotypic richness&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 3.6 Relationship between diversity and success 3.6.1 Earlier in run ggplot( data %&gt;% filter(generation==500), aes( y=max_performance, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( data %&gt;% filter(generation==500), aes( y=max_performance, x=phenotype_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) phylogney_vs_performance &lt;- ggplot( data %&gt;% filter(generation==1000), aes( y=max_performance, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) phylogney_vs_performance ggplot( data %&gt;% filter(generation==1000), aes( y=max_performance, x=phenotype_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 3.6.2 End of run ggplot( final_data, aes( y=max_performance, x=mean_phenotype_pairwise_distance, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Mean pairwise distance&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) ggplot( final_data, aes( y=max_performance, x=phenotype_num_taxa, color=selection_name, fill=selection_name ) ) + geom_point() + scale_y_continuous( name=&quot;Average trait performance&quot; ) + scale_x_continuous( name=&quot;Phenotypic richness&quot; ) + facet_wrap( ~selection_name*problem_name, scales=&quot;free&quot; ) + stat_smooth( method=&quot;lm&quot; ) + stat_cor( method=&quot;spearman&quot;, cor.coef.name = &quot;rho&quot;, color=&quot;black&quot; ) + theme(legend.position = &quot;none&quot;) 3.7 Causality analysis 3.7.1 Setup First let’s define a function we’ll use to calculate and output significance and effect size for these results: transfer_entropy_stats &lt;- function(res) { stat.test &lt;- res %&gt;% group_by(selection_name, offset) %&gt;% wilcox_test(value ~ Type) %&gt;% adjust_pvalue(method = &quot;bonferroni&quot;) %&gt;% add_significance() stat.test$label &lt;- mapply(p_label,stat.test$p.adj) # Calculate effect sizes for these differences effect_sizes &lt;- res %&gt;% group_by(selection_name, offset) %&gt;% wilcox_effsize(value ~ Type) stat.test$effsize &lt;- effect_sizes$effsize stat.test$magnitude &lt;- effect_sizes$magnitude stat.test %&gt;% kbl() %&gt;% kable_styling( bootstrap_options = c( &quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot; ) ) %&gt;% scroll_box() } 3.7.2 Transfer entropy from diversity to fitness 3.7.2.1 Max pairwise distance vs. phenotypic richness res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(max_performance), discretize(lag(max_phenotype_pairwise_distance, 1)), discretize(lag(max_performance, 1))), fit_phylo_100 = condinformation(discretize(max_performance), discretize(lag(max_phenotype_pairwise_distance, 10)), discretize(lag(max_performance, 10))), fit_phylo_500 = condinformation(discretize(max_performance), discretize(lag(max_phenotype_pairwise_distance, 50)), discretize(lag(max_performance, 50))), fit_pheno_10 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_performance, 1))), fit_pheno_100 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_performance, 10))), fit_pheno_500 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 50)), discretize(lag(max_performance, 50))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic Phylogenetic 240 240 28107.5 6.48e-01 1.0000000 ns p = 1 0.0208621 small Eco-EA 100 value Phenotypic Phylogenetic 240 240 26650.5 1.56e-01 1.0000000 ns p = 1 0.0647554 small Eco-EA 1000 value Phenotypic Phylogenetic 240 240 25812.5 4.74e-02 0.7110000 ns p = 0.711 0.0905254 small Fitness sharing 10 value Phenotypic Phylogenetic 240 240 26332.0 1.04e-01 1.0000000 ns p = 1 0.0741364 small Fitness sharing 100 value Phenotypic Phylogenetic 240 240 22739.0 6.65e-05 0.0009975 *** p = 0.0009975 0.1820667 small Fitness sharing 1000 value Phenotypic Phylogenetic 240 240 19812.0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.2699911 small Lexicase 10 value Phenotypic Phylogenetic 240 240 29139.5 8.21e-01 1.0000000 ns p = 1 0.0103448 small Lexicase 100 value Phenotypic Phylogenetic 240 240 24755.5 6.94e-03 0.1041000 ns p = 0.1041 0.1232393 small Lexicase 1000 value Phenotypic Phylogenetic 240 240 24024.0 1.40e-03 0.0210000 p = 0.021 0.1458000 small Random 10 value Phenotypic Phylogenetic 240 240 28326.5 7.56e-01 1.0000000 ns p = 1 0.0142265 small Random 100 value Phenotypic Phylogenetic 240 240 25306.5 2.15e-02 0.3225000 ns p = 0.3225 0.1049636 small Random 1000 value Phenotypic Phylogenetic 240 240 24301.5 3.06e-03 0.0459000 p = 0.0459 0.1351827 small Tournament 10 value Phenotypic Phylogenetic 240 240 29279.5 7.51e-01 1.0000000 ns p = 1 0.0145234 small Tournament 100 value Phenotypic Phylogenetic 240 240 27852.5 5.30e-01 1.0000000 ns p = 1 0.0286986 small Tournament 1000 value Phenotypic Phylogenetic 240 240 27933.0 5.60e-01 1.0000000 ns p = 1 0.0266208 small 3.7.2.2 Mean pairwise distance vs. phenotypic richness res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(max_performance, 1))), fit_phylo_100 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(max_performance, 10))), fit_phylo_500 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_pairwise_distance, 50)), discretize(lag(max_performance, 50))), fit_pheno_10 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_performance, 1))), fit_pheno_100 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_performance, 10))), fit_pheno_500 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 50)), discretize(lag(max_performance, 50))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic Phylogenetic 240 240 27924.5 5.64e-01 1.0000000 ns p = 1 0.0263751 small Eco-EA 100 value Phenotypic Phylogenetic 240 240 27172.5 2.83e-01 1.0000000 ns p = 1 0.0490297 small Eco-EA 1000 value Phenotypic Phylogenetic 240 240 25842.0 4.96e-02 0.7440000 ns p = 0.744 0.0896315 small Fitness sharing 10 value Phenotypic Phylogenetic 240 240 26643.0 1.56e-01 1.0000000 ns p = 1 0.0647942 small Fitness sharing 100 value Phenotypic Phylogenetic 240 240 22182.0 1.33e-05 0.0001995 *** p = 0.0001995 0.1987984 small Fitness sharing 1000 value Phenotypic Phylogenetic 240 240 18641.0 0.00e+00 0.0000000 **** p &lt; 1e-04 0.3051668 moderate Lexicase 10 value Phenotypic Phylogenetic 240 240 28773.5 9.86e-01 1.0000000 ns p = 1 0.0008075 small Lexicase 100 value Phenotypic Phylogenetic 240 240 24693.5 6.12e-03 0.0918000 ns p = 0.0918 0.1251285 small Lexicase 1000 value Phenotypic Phylogenetic 240 240 23710.0 6.64e-04 0.0099600 ** p = 0.00996 0.1553857 small Random 10 value Phenotypic Phylogenetic 240 240 28536.0 8.62e-01 1.0000000 ns p = 1 0.0079320 small Random 100 value Phenotypic Phylogenetic 240 240 25861.0 5.31e-02 0.7965000 ns p = 0.7965 0.0883034 small Random 1000 value Phenotypic Phylogenetic 240 240 25287.0 2.07e-02 0.3105000 ns p = 0.3105 0.1055679 small Tournament 10 value Phenotypic Phylogenetic 240 240 28504.0 8.45e-01 1.0000000 ns p = 1 0.0089655 small Tournament 100 value Phenotypic Phylogenetic 240 240 26140.5 7.76e-02 1.0000000 ns p = 1 0.0805529 small Tournament 1000 value Phenotypic Phylogenetic 240 240 27125.0 2.60e-01 1.0000000 ns p = 1 0.0514300 small 3.7.2.3 Mean pairwise distance vs. phenotypic Shannon diversity res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(max_performance, 1))), fit_phylo_100 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(max_performance, 10))), fit_phylo_500 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_pairwise_distance, 50)), discretize(lag(max_performance, 50))), fit_pheno_10 = condinformation(discretize(max_performance), discretize(lag(phenotype_diversity, 1)), discretize(lag(max_performance, 1))), fit_pheno_100 = condinformation(discretize(max_performance), discretize(lag(phenotype_diversity, 10)), discretize(lag(max_performance, 10))), fit_pheno_500 = condinformation(discretize(max_performance), discretize(lag(phenotype_diversity, 50)), discretize(lag(max_performance, 50))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic Phylogenetic 240 240 28432.0 0.809000 1.00000 ns p = 1 0.0110549 small Eco-EA 100 value Phenotypic Phylogenetic 240 240 25094.5 0.014800 0.14800 ns p = 0.148 0.1113101 small Fitness sharing 10 value Phenotypic Phylogenetic 240 240 25665.0 0.039100 0.39100 ns p = 0.391 0.0941725 small Fitness sharing 100 value Phenotypic Phylogenetic 240 240 18866.0 0.000000 0.00000 **** p &lt; 1e-04 0.2984080 small Lexicase 10 value Phenotypic Phylogenetic 240 240 27887.0 0.545000 1.00000 ns p = 1 0.0276317 small Lexicase 100 value Phenotypic Phylogenetic 240 240 23061.5 0.000142 0.00142 ** p = 0.00142 0.1736740 small Random 10 value Phenotypic Phylogenetic 240 240 27546.0 0.409000 1.00000 ns p = 1 0.0377329 small Random 100 value Phenotypic Phylogenetic 240 240 27250.5 0.307000 1.00000 ns p = 1 0.0466243 small Tournament 10 value Phenotypic Phylogenetic 240 240 28662.0 0.927000 1.00000 ns p = 1 0.0041734 small Tournament 100 value Phenotypic Phylogenetic 240 240 27121.5 0.267000 1.00000 ns p = 1 0.0507102 small 3.7.2.4 Mean evolutionary distinctiveness vs. phenotypic richness res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(max_performance, 1))), fit_phylo_100 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(max_performance, 10))), fit_phylo_500 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 50)), discretize(lag(max_performance, 50))), fit_pheno_10 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_performance, 1))), fit_pheno_100 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_performance, 10))), fit_pheno_500 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 50)), discretize(lag(max_performance, 50))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic Phylogenetic 240 240 27071.5 2.55e-01 1.000000 ns p = 1 0.0519251 small Eco-EA 100 value Phenotypic Phylogenetic 240 240 24236.0 2.67e-03 0.026700 p = 0.0267 0.1370986 small Fitness sharing 10 value Phenotypic Phylogenetic 240 240 26368.0 1.10e-01 1.000000 ns p = 1 0.0730550 small Fitness sharing 100 value Phenotypic Phylogenetic 240 240 24482.0 4.49e-03 0.044900 p = 0.0449 0.1297087 small Lexicase 10 value Phenotypic Phylogenetic 240 240 29278.0 7.52e-01 1.000000 ns p = 1 0.0144665 small Lexicase 100 value Phenotypic Phylogenetic 240 240 23573.5 5.30e-04 0.005300 ** p = 0.0053 0.1581785 small Random 10 value Phenotypic Phylogenetic 240 240 28256.0 7.20e-01 1.000000 ns p = 1 0.0163689 small Random 100 value Phenotypic Phylogenetic 240 240 27327.0 3.32e-01 1.000000 ns p = 1 0.0443224 small Tournament 10 value Phenotypic Phylogenetic 240 240 28964.5 9.13e-01 1.000000 ns p = 1 0.0049749 small Tournament 100 value Phenotypic Phylogenetic 240 240 22758.0 6.36e-05 0.000636 *** p = 0.000636 0.1825385 small 3.7.2.5 Mean evolutionary distinctiveness vs. phenotypic Shannon diveristy res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(max_performance, 1))), fit_phylo_100 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(max_performance, 10))), fit_phylo_500 = condinformation(discretize(max_performance), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 50)), discretize(lag(max_performance, 50))), fit_pheno_10 = condinformation(discretize(max_performance), discretize(lag(phenotype_diversity, 1)), discretize(lag(max_performance, 1))), fit_pheno_100 = condinformation(discretize(max_performance), discretize(lag(phenotype_diversity, 10)), discretize(lag(max_performance, 10))), fit_pheno_500 = condinformation(discretize(max_performance), discretize(lag(phenotype_diversity, 50)), discretize(lag(max_performance, 50))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic Phylogenetic 240 240 27878.0 0.544000 1.00000 ns p = 1 0.0276974 small Eco-EA 100 value Phenotypic Phylogenetic 240 240 24139.5 0.002160 0.02160 p = 0.0216 0.1399975 small Fitness sharing 10 value Phenotypic Phylogenetic 240 240 26469.0 0.125000 1.00000 ns p = 1 0.0700210 small Fitness sharing 100 value Phenotypic Phylogenetic 240 240 24377.0 0.003610 0.03610 p = 0.0361 0.1328628 small Lexicase 10 value Phenotypic Phylogenetic 240 240 28847.5 0.975000 1.00000 ns p = 1 0.0014376 small Lexicase 100 value Phenotypic Phylogenetic 240 240 23292.5 0.000261 0.00261 ** p = 0.00261 0.1666828 small Random 10 value Phenotypic Phylogenetic 240 240 28179.0 0.682000 1.00000 ns p = 1 0.0186861 small Random 100 value Phenotypic Phylogenetic 240 240 28542.5 0.865000 1.00000 ns p = 1 0.0077482 small Tournament 10 value Phenotypic Phylogenetic 240 240 28976.5 0.907000 1.00000 ns p = 1 0.0053378 small Tournament 100 value Phenotypic Phylogenetic 240 240 23925.0 0.001250 0.01250 p = 0.0125 0.1472815 small 3.7.2.6 Variance evolutionary distinctiveness vs. phenotypic richness res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( fit_phylo_10 = condinformation(discretize(max_performance), discretize(lag(variance_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(max_performance, 1))), fit_phylo_100 = condinformation(discretize(max_performance), discretize(lag(variance_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(max_performance, 10))), fit_phylo_500 = condinformation(discretize(max_performance), discretize(lag(variance_phenotype_evolutionary_distinctiveness, 50)), discretize(lag(max_performance, 50))), fit_pheno_10 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_performance, 1))), fit_pheno_100 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_performance, 10))), fit_pheno_500 = condinformation(discretize(max_performance), discretize(lag(phenotype_num_taxa, 50)), discretize(lag(max_performance, 50))) ) res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;o_10&quot;)) res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) res$Type &lt;- case_when(str_detect(res$name, &quot;phylo&quot;) ~ &quot;Phylogenetic&quot;, TRUE ~ &quot;Phenotypic&quot;) ggplot( res %&gt;% filter(str_detect(name, &quot;fit_ph*&quot;)), aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~problem_name*selection_name) + scale_x_discrete(&quot;Lag&quot;) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) + theme(legend.position = &quot;bottom&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic Phylogenetic 240 240 27618.0 0.43700 1.0000 ns p = 1 0.0355079 small Eco-EA 100 value Phenotypic Phylogenetic 240 240 24904.5 0.01040 0.1040 ns p = 0.104 0.1170174 small Fitness sharing 10 value Phenotypic Phylogenetic 240 240 27307.0 0.32600 1.0000 ns p = 1 0.0448483 small Fitness sharing 100 value Phenotypic Phylogenetic 240 240 28643.0 0.91800 1.0000 ns p = 1 0.0047161 small Lexicase 10 value Phenotypic Phylogenetic 240 240 28782.5 0.99100 1.0000 ns p = 1 0.0005296 small Lexicase 100 value Phenotypic Phylogenetic 240 240 25088.0 0.01390 0.1390 ns p = 0.139 0.1123426 small Random 10 value Phenotypic Phylogenetic 240 240 29327.0 0.72900 1.0000 ns p = 1 0.0158574 small Random 100 value Phenotypic Phylogenetic 240 240 28087.5 0.63900 1.0000 ns p = 1 0.0214390 small Tournament 10 value Phenotypic Phylogenetic 240 240 28982.5 0.90400 1.0000 ns p = 1 0.0055192 small Tournament 100 value Phenotypic Phylogenetic 240 240 24187.0 0.00227 0.0227 p = 0.0227 0.1393661 small 3.7.3 Transfer entropy between types of diversity While we’re calculating transfer entropy, we might as well also calculate it between phenotypic diversity and phylogenetic diversity, as these could potentially also be in a feedback loop. 3.7.3.1 Max pairwise distance and phenotypic richness res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phenotype_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 1)), discretize(lag(phenotype_num_taxa, 1))), phen_phylo_100 = condinformation(discretize(phenotype_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 10)), discretize(lag(phenotype_num_taxa, 10))), pheno_phylo_500 = condinformation(discretize(phenotype_num_taxa), discretize(lag(max_phenotype_pairwise_distance, 50)), discretize(lag(phenotype_num_taxa, 50))), phylo_pheno_10 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(max_phenotype_pairwise_distance, 1))), phylo_pheno_100 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(max_phenotype_pairwise_distance, 10))), phylo_pheno_500 = condinformation(discretize(max_phenotype_pairwise_distance), discretize(lag(phenotype_num_taxa, 50)), discretize(lag(max_phenotype_pairwise_distance, 50)))) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name* problem_name) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 6958 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6561130 large Eco-EA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 14855 0.00e+00 0.0000000 **** p &lt; 1e-04 0.4188946 moderate Eco-EA 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 21575 2.00e-06 0.0000299 **** p &lt; 1e-04 0.2170322 small Fitness sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 2925 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7772605 large Fitness sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 20851 2.00e-07 0.0000025 **** p &lt; 1e-04 0.2387804 small Fitness sharing 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 22621 4.78e-05 0.0007170 *** p = 0.000717 0.1856113 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 6761 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6620307 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 12450 0.00e+00 0.0000000 **** p &lt; 1e-04 0.4911385 moderate Lexicase 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 15778 0.00e+00 0.0000000 **** p &lt; 1e-04 0.3914964 moderate Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 2011 0.00e+00 0.0000000 **** p &lt; 1e-04 0.8047162 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 3736 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7528988 large Random 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 6272 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6767198 large Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 21406 1.10e-06 0.0000171 **** p &lt; 1e-04 0.2221088 small Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 30069 4.04e-01 1.0000000 ns p = 1 0.0381196 small Tournament 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 25468 2.83e-02 0.4245000 ns p = 0.4245 0.1000901 small 3.7.3.2 Mean pairwise distance and phenotypic richness res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phenotype_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(phenotype_num_taxa, 1))), phen_phylo_100 = condinformation(discretize(phenotype_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(phenotype_num_taxa, 10))), pheno_phylo_500 = condinformation(discretize(phenotype_num_taxa), discretize(lag(mean_phenotype_pairwise_distance, 50)), discretize(lag(phenotype_num_taxa, 50))), phylo_pheno_10 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(mean_phenotype_pairwise_distance, 1))), phylo_pheno_100 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(mean_phenotype_pairwise_distance, 10))), phylo_pheno_500 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phenotype_num_taxa, 50)), discretize(lag(mean_phenotype_pairwise_distance, 50))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name*problem_name) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 6847 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6594473 large Eco-EA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 19033 0.00e+00 0.0000000 **** p &lt; 1e-04 0.2933914 small Eco-EA 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 25539 3.19e-02 0.4785000 ns p = 0.4785 0.0979573 small Fitness sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 2456 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7913488 large Fitness sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 22770 7.24e-05 0.0010860 ** p = 0.001086 0.1811355 small Fitness sharing 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 22528 3.67e-05 0.0005505 *** p = 0.0005505 0.1884049 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 13879 0.00e+00 0.0000000 **** p &lt; 1e-04 0.4482525 moderate Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 15973 0.00e+00 0.0000000 **** p &lt; 1e-04 0.3853350 moderate Lexicase 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 17781 0.00e+00 0.0000000 **** p &lt; 1e-04 0.3310011 moderate Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 3809 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7507060 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 6568 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6678282 large Random 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 6557 0.00e+00 0.0000000 **** p &lt; 1e-04 0.6681586 large Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 10956 0.00e+00 0.0000000 **** p &lt; 1e-04 0.5360168 large Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 30938 1.60e-01 1.0000000 ns p = 1 0.0642235 small Tournament 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 29992 4.33e-01 1.0000000 ns p = 1 0.0358066 small 3.7.3.3 Mean pairwise distance and shannon diversity res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( phen_phylo_10 = condinformation(discretize(phenotype_diversity), discretize(lag(mean_phenotype_pairwise_distance, 1)), discretize(lag(phenotype_diversity, 1))), phen_phylo_100 = condinformation(discretize(phenotype_diversity), discretize(lag(mean_phenotype_pairwise_distance, 10)), discretize(lag(phenotype_diversity, 10))), pheno_phylo_500 = condinformation(discretize(phenotype_diversity), discretize(lag(mean_phenotype_pairwise_distance, 50)), discretize(lag(phenotype_diversity, 50))), phylo_pheno_10 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phenotype_diversity, 1)), discretize(lag(mean_phenotype_pairwise_distance, 1))), phylo_pheno_100 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phenotype_diversity, 10)), discretize(lag(mean_phenotype_pairwise_distance, 10))), phylo_pheno_500 = condinformation(discretize(mean_phenotype_pairwise_distance), discretize(lag(phenotype_diversity, 50)), discretize(lag(mean_phenotype_pairwise_distance, 50))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name*problem_name) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 15691 0.00e+00 0.0000000 **** p &lt; 1e-04 0.3937819 moderate Eco-EA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 25886 5.52e-02 0.8280000 ns p = 0.828 0.0875338 small Eco-EA 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 28243 7.14e-01 1.0000000 ns p = 1 0.0167318 small Fitness sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 2816 0.00e+00 0.0000000 **** p &lt; 1e-04 0.7805347 large Fitness sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 22774 7.32e-05 0.0010980 ** p = 0.001098 0.1810153 small Fitness sharing 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 21905 5.70e-06 0.0000854 **** p &lt; 1e-04 0.2071193 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 15815 0.00e+00 0.0000000 **** p &lt; 1e-04 0.3912234 moderate Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 18074 0.00e+00 0.0000000 **** p &lt; 1e-04 0.3230971 moderate Lexicase 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 18661 0.00e+00 0.0000000 **** p &lt; 1e-04 0.3046031 moderate Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 12767 0.00e+00 0.0000000 **** p &lt; 1e-04 0.4816161 moderate Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 11104 0.00e+00 0.0000000 **** p &lt; 1e-04 0.5315711 large Random 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 10826 0.00e+00 0.0000000 **** p &lt; 1e-04 0.5399219 large Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 23366 3.49e-04 0.0052350 ** p = 0.005235 0.1632322 small Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 30523 2.57e-01 1.0000000 ns p = 1 0.0517573 small Tournament 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 28660 9.27e-01 1.0000000 ns p = 1 0.0042055 small 3.7.3.4 Mean evolutionary distinctiveness and phenotypic richness res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( phen_phylo_10 = condinformation( discretize(phenotype_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(phenotype_num_taxa, 1))), phen_phylo_100 = condinformation( discretize(phenotype_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(phenotype_num_taxa, 10))), pheno_phylo_500 = condinformation( discretize(phenotype_num_taxa), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 50)), discretize(lag(phenotype_num_taxa, 50))), phylo_pheno_10 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phenotype_num_taxa, 1)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1))), phylo_pheno_100 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phenotype_num_taxa, 10)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10))), phylo_pheno_500 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phenotype_num_taxa, 50)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 50))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name*problem_name) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 934 0.000000 0.00000 **** p &lt; 1e-04 0.8370682 large Eco-EA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 9656 0.000000 0.00000 **** p &lt; 1e-04 0.5750676 large Eco-EA 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 15734 0.000000 0.00000 **** p &lt; 1e-04 0.3924903 moderate Fitness sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 15338 0.000000 0.00000 **** p &lt; 1e-04 0.4043857 moderate Fitness sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 33694 0.001280 0.01920 p = 0.0192 0.1470111 small Fitness sharing 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 34436 0.000208 0.00312 ** p = 0.00312 0.1693001 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 2492 0.000000 0.00000 **** p &lt; 1e-04 0.7902674 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 8305 0.000000 0.00000 **** p &lt; 1e-04 0.6156504 large Lexicase 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 15244 0.000000 0.00000 **** p &lt; 1e-04 0.4072094 moderate Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 9881 0.000000 0.00000 **** p &lt; 1e-04 0.5683088 large Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 16097 0.000000 0.00000 **** p &lt; 1e-04 0.3815861 moderate Random 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 18566 0.000000 0.00000 **** p &lt; 1e-04 0.3074197 moderate Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 512 0.000000 0.00000 **** p &lt; 1e-04 0.8497447 large Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 11177 0.000000 0.00000 **** p &lt; 1e-04 0.5293782 large Tournament 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 16974 0.000000 0.00000 **** p &lt; 1e-04 0.3552418 moderate 3.7.3.5 Mean evolutionary distinctiveness and shannon diversity res &lt;- data %&gt;% group_by(SEED, selection_name, problem_name) %&gt;% summarise( phen_phylo_10 = condinformation( discretize(phenotype_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1)), discretize(lag(phenotype_diversity, 1))), phen_phylo_100 = condinformation( discretize(phenotype_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10)), discretize(lag(phenotype_diversity, 10))), pheno_phylo_500 = condinformation( discretize(phenotype_diversity), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 50)), discretize(lag(phenotype_diversity, 50))), phylo_pheno_10 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phenotype_diversity, 1)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 1))), phylo_pheno_100 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phenotype_diversity, 10)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 10))), phylo_pheno_500 = condinformation( discretize(mean_phenotype_evolutionary_distinctiveness), discretize(lag(phenotype_diversity, 50)), discretize(lag(mean_phenotype_evolutionary_distinctiveness, 50))) ) # Turn Transfer Entropy columns into rows res &lt;- res %&gt;% pivot_longer(cols=contains(&quot;phylo&quot;)) # Pull lag into a column res$offset &lt;- str_extract(res$name, &quot;[:digit:]*$&quot;) # Make column indicating direction of transfer entropy res$Type &lt;- case_when(str_detect(res$name, &quot;phylo_pheno&quot;) ~ &quot;\\nPhenotypic\\n\\t-&gt;\\nPhylogenetic\\n&quot;, TRUE ~ &quot;\\nPhylogenetic\\n\\t-&gt;\\nPhenotypic\\n&quot;) ggplot( res, aes( x=as.factor(offset), y=value, color=Type ) ) + geom_boxplot() + facet_wrap(~selection_name*problem_name) + scale_y_continuous(&quot;Transfer Entropy&quot;) + scale_color_discrete(&quot;&quot;) # Determine which conditions are significantly different from each other transfer_entropy_stats(res) selection_name offset .y. group1 group2 n1 n2 statistic p p.adj p.adj.signif label effsize magnitude Eco-EA 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 2796 0.000000 0.0000000 **** p &lt; 1e-04 0.7811355 large Eco-EA 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 12134 0.000000 0.0000000 **** p &lt; 1e-04 0.5006308 large Eco-EA 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 16639 0.000000 0.0000000 **** p &lt; 1e-04 0.3653049 moderate Fitness sharing 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 15579 0.000000 0.0000000 **** p &lt; 1e-04 0.3971463 moderate Fitness sharing 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 34122 0.000461 0.0069150 ** p = 0.006915 0.1598678 small Fitness sharing 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 33296 0.003090 0.0463500 p = 0.04635 0.1350556 small Lexicase 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 2930 0.000000 0.0000000 **** p &lt; 1e-04 0.7771103 large Lexicase 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 9917 0.000000 0.0000000 **** p &lt; 1e-04 0.5672274 large Lexicase 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 15138 0.000000 0.0000000 **** p &lt; 1e-04 0.4103935 moderate Random 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 23749 0.000888 0.0133200 p = 0.01332 0.1517273 small Random 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 19170 0.000000 0.0000000 **** p &lt; 1e-04 0.2892761 small Random 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 20173 0.000000 0.0000002 **** p &lt; 1e-04 0.2591469 small Tournament 10 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 1996 0.000000 0.0000000 **** p &lt; 1e-04 0.8051668 large Tournament 100 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 8604 0.000000 0.0000000 **** p &lt; 1e-04 0.6066687 large Tournament 500 value Phenotypic -&gt; Phylogenetic Phylogenetic -&gt; Phenotypic 240 240 14842 0.000000 0.0000000 **** p &lt; 1e-04 0.4192851 moderate "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
